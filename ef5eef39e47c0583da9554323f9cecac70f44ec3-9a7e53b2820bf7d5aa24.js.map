{"version":3,"sources":["webpack:///./node_modules/react-i18next/dist/es/utils.js","webpack:///./node_modules/react-i18next/dist/es/useTranslation.js","webpack:///./src/constants/index.js","webpack:///./src/cm-lib/QiMen/index.js","webpack:///./node_modules/date-fns/esm/addHours/index.js","webpack:///./node_modules/date-fns/esm/addMilliseconds/index.js","webpack:///./node_modules/date-fns/esm/isValid/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","webpack:///./node_modules/date-fns/esm/subMilliseconds/index.js","webpack:///./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","webpack:///./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/format/formatters/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/format/longFormatters/index.js","webpack:///./node_modules/date-fns/esm/_lib/protectedTokens/index.js","webpack:///./node_modules/date-fns/esm/format/index.js"],"names":["warn","console","_console","_len","arguments","length","args","Array","_key","concat","apply","alreadyWarned","warnOnce","_len2","_key2","Date","loadNamespaces","i18n","ns","cb","isInitialized","on","initialized","setTimeout","off","hasLoadedNamespace","options","undefined","languages","lng","fallbackLng","lastLng","toLowerCase","loadNotPending","l","n","loadState","services","backendConnector","state","bindI18n","indexOf","backend","isLanguageChangingTo","hasResourceBundle","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread","target","i","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","useTranslation","props","i18nFromProps","_ref","i18nFromContext","defaultNSFromContext","defaultNS","reportNamespaces","notReadyT","k","isArray","retNotReady","t","ready","i18nOptions","react","useSuspense","namespaces","addUsedNamespaces","initializedStoreOnce","every","getT","getFixedT","nsMode","_useState","_useState2","setT","isMounted","bindI18nStore","boundReset","current","store","split","e","join","ret","Promise","resolve","DATETIME_FORMAT","DATE_FORMAT","DATETIME_FORMAT_ROUND_DOWN","READABLE_DATETIME_FORMAT","READABLE_DATETIME_FORMAT_ROUND_DOWN","CalenderData","require","get3VWithinRange","dob","dateString","range","method","natalChart","getZhiRunHourChart","parseISO","date","map","setDate","monthChartObj","getMonthChartByDate","monthChart","lookupChart","structure","pillar","dayChartObject","getDayChartByDate","dayChart","isDivineLightDate","isDivineLightDay","p","divineLight","chart","isDivineLight3Overlap","findChiefPalace","ju","palace","format","isDivineBlessDate","isDivineBlessingDay","isDivineForceDate","isDivineForceDay","sector","sectorIndex","DIRECTION","findIndex","door","god","searchHourChart","startDate","endDate","searchFormation","result","found","Ju","v","find","g","f","hour","dirtyDate","dirtyAmount","requiredArgs","amount","toInteger","addMilliseconds","addHours","dt","bazi","dateObjectToBazi","yearMonthKey","dayOfMonth","GanZhiHour","ganzhi","chiefPalace","originalStarPalace","STAR","profile","dayStem","GanZhiDay","substring","hourStem","divineBless","findDivineBlessing","findDivineLight","divineForce","findDivineForce","isoString","toISOString","title","label","description","element","red","getColor","word","colorCode","includes","getDayChart","getFullYear","getMonth","getDate","year","month","day","lookup","9","1","3","7","6","4","gregorianToBazi","start","startJu","solarTerm","chartType","index","SIXTY_PILLAR","Number","findSymbol","star","symbol","getMonthChart","slice","GanZhiYear","GanZhiMonth","timestamp","getTime","isValid","toDate","isNaN","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","width","String","defaultWidth","formats","formatLong","full","long","medium","short","time","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","dirtyIndex","dirtyOptions","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","buildMatchFn","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","value","matchedString","parsePatterns","defaultParseWidth","pattern","test","findKey","valueCallback","rest","predicate","hasOwnProperty","array","code","formatDistance","token","count","replace","addSuffix","comparison","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","dirtyNumber","_dirtyOptions","number","rem100","era","narrow","abbreviated","wide","quarter","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseInt","parseResult","any","weekStartsOn","firstWeekContainsDate","subMilliseconds","addLeadingZeros","targetLength","sign","output","Math","abs","toString","y","signedYear","getUTCFullYear","M","getUTCMonth","d","getUTCDate","a","dayPeriodEnumValue","getUTCHours","toUpperCase","h","H","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","floor","pow","startOfUTCISOWeek","getUTCDay","diff","setUTCDate","setUTCHours","getUTCISOWeekYear","fourthOfJanuaryOfNextYear","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","startOfUTCISOWeekYear","fourthOfJanuary","startOfUTCWeek","locale","localeWeekStartsOn","defaultWeekStartsOn","RangeError","getUTCWeekYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfUTCWeekYear","firstWeek","dayPeriodEnum","formatTimezoneShort","offset","dirtyDelimiter","absOffset","hours","minutes","delimiter","formatTimezoneWithOptionalMinutes","formatTimezone","G","unit","lightFormatters","Y","signedWeekYear","weekYear","R","u","Q","ceil","q","L","w","week","round","getUTCWeek","I","isoWeek","getUTCISOWeek","D","dayOfYear","setUTCMonth","startOfYearTimestamp","difference","getUTCDayOfYear","E","dayOfWeek","localDayOfWeek","c","isoDayOfWeek","b","B","K","X","_localize","timezoneOffset","_originalDate","getTimezoneOffset","x","O","z","originalDate","T","dateLongFormatter","timeLongFormatter","P","dateTimeFormat","datePattern","timePattern","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","isProtectedWeekYearToken","throwProtectedError","input","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","formatStr","getTimezoneOffsetInMilliseconds","utcDate","formatterOptions","firstCharacter","longFormatter","cleanEscapedString","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens"],"mappings":"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","file":"ef5eef39e47c0583da9554323f9cecac70f44ec3-9a7e53b2820bf7d5aa24.js","sourcesContent":["export function warn() {\n  if (console && console.warn) {\n    var _console;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    if (typeof args[0] === 'string') args[0] = \"react-i18next:: \".concat(args[0]);\n\n    (_console = console).warn.apply(_console, args);\n  }\n}\nvar alreadyWarned = {};\nexport function warnOnce() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  if (typeof args[0] === 'string' && alreadyWarned[args[0]]) return;\n  if (typeof args[0] === 'string') alreadyWarned[args[0]] = new Date();\n  warn.apply(void 0, args);\n}\nexport function loadNamespaces(i18n, ns, cb) {\n  i18n.loadNamespaces(ns, function () {\n    if (i18n.isInitialized) {\n      cb();\n    } else {\n      var initialized = function initialized() {\n        setTimeout(function () {\n          i18n.off('initialized', initialized);\n        }, 0);\n        cb();\n      };\n\n      i18n.on('initialized', initialized);\n    }\n  });\n}\nexport function hasLoadedNamespace(ns, i18n) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (!i18n.languages || !i18n.languages.length) {\n    warnOnce('i18n.languages were undefined or empty', i18n.languages);\n    return true;\n  }\n\n  var lng = i18n.languages[0];\n  var fallbackLng = i18n.options ? i18n.options.fallbackLng : false;\n  var lastLng = i18n.languages[i18n.languages.length - 1];\n  if (lng.toLowerCase() === 'cimode') return true;\n\n  var loadNotPending = function loadNotPending(l, n) {\n    var loadState = i18n.services.backendConnector.state[\"\".concat(l, \"|\").concat(n)];\n    return loadState === -1 || loadState === 2;\n  };\n\n  if (options.bindI18n && options.bindI18n.indexOf('languageChanging') > -1 && i18n.services.backendConnector.backend && i18n.isLanguageChangingTo && !loadNotPending(i18n.isLanguageChangingTo, ns)) return false;\n  if (i18n.hasResourceBundle(lng, ns)) return true;\n  if (!i18n.services.backendConnector.backend) return true;\n  if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n  return false;\n}\nexport function getDisplayName(Component) {\n  return Component.displayName || Component.name || (typeof Component === 'string' && Component.length > 0 ? Component : 'Unknown');\n}","import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport { useState, useEffect, useContext, useRef } from 'react';\nimport { getI18n, getDefaults, ReportNamespaces, I18nContext } from './context';\nimport { warnOnce, loadNamespaces, hasLoadedNamespace } from './utils';\nexport function useTranslation(ns) {\n  var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var i18nFromProps = props.i18n;\n\n  var _ref = useContext(I18nContext) || {},\n      i18nFromContext = _ref.i18n,\n      defaultNSFromContext = _ref.defaultNS;\n\n  var i18n = i18nFromProps || i18nFromContext || getI18n();\n  if (i18n && !i18n.reportNamespaces) i18n.reportNamespaces = new ReportNamespaces();\n\n  if (!i18n) {\n    warnOnce('You will need to pass in an i18next instance by using initReactI18next');\n\n    var notReadyT = function notReadyT(k) {\n      return Array.isArray(k) ? k[k.length - 1] : k;\n    };\n\n    var retNotReady = [notReadyT, {}, false];\n    retNotReady.t = notReadyT;\n    retNotReady.i18n = {};\n    retNotReady.ready = false;\n    return retNotReady;\n  }\n\n  var i18nOptions = _objectSpread(_objectSpread(_objectSpread({}, getDefaults()), i18n.options.react), props);\n\n  var useSuspense = i18nOptions.useSuspense;\n  var namespaces = ns || defaultNSFromContext || i18n.options && i18n.options.defaultNS;\n  namespaces = typeof namespaces === 'string' ? [namespaces] : namespaces || ['translation'];\n  if (i18n.reportNamespaces.addUsedNamespaces) i18n.reportNamespaces.addUsedNamespaces(namespaces);\n  var ready = (i18n.isInitialized || i18n.initializedStoreOnce) && namespaces.every(function (n) {\n    return hasLoadedNamespace(n, i18n, i18nOptions);\n  });\n\n  function getT() {\n    return {\n      t: i18n.getFixedT(null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0])\n    };\n  }\n\n  var _useState = useState(getT()),\n      _useState2 = _slicedToArray(_useState, 2),\n      t = _useState2[0],\n      setT = _useState2[1];\n\n  var isMounted = useRef(true);\n  useEffect(function () {\n    var bindI18n = i18nOptions.bindI18n,\n        bindI18nStore = i18nOptions.bindI18nStore;\n    isMounted.current = true;\n\n    if (!ready && !useSuspense) {\n      loadNamespaces(i18n, namespaces, function () {\n        if (isMounted.current) setT(getT());\n      });\n    }\n\n    function boundReset() {\n      if (isMounted.current) setT(getT());\n    }\n\n    if (bindI18n && i18n) i18n.on(bindI18n, boundReset);\n    if (bindI18nStore && i18n) i18n.store.on(bindI18nStore, boundReset);\n    return function () {\n      isMounted.current = false;\n      if (bindI18n && i18n) bindI18n.split(' ').forEach(function (e) {\n        return i18n.off(e, boundReset);\n      });\n      if (bindI18nStore && i18n) bindI18nStore.split(' ').forEach(function (e) {\n        return i18n.store.off(e, boundReset);\n      });\n    };\n  }, [namespaces.join()]);\n  var ret = [t.t, i18n, ready];\n  ret.t = t.t;\n  ret.i18n = i18n;\n  ret.ready = ready;\n  if (ready) return ret;\n  if (!ready && !useSuspense) return ret;\n  throw new Promise(function (resolve) {\n    loadNamespaces(i18n, namespaces, function () {\n      resolve();\n    });\n  });\n}","export const DATETIME_FORMAT = \"yyyy-MM-dd HH:mm\"\nexport const DATE_FORMAT = \"yyyy-MM-dd\"\n\nexport const DATETIME_FORMAT_ROUND_DOWN = \"yyyy-MM-dd HH:00\"\n\nexport const READABLE_DATETIME_FORMAT = \"yyyy MMM dd HH:mm\"\nexport const READABLE_DATETIME_FORMAT_ROUND_DOWN = \"yyyy MMM dd HH:00\"\n","import { format } from \"date-fns\"\nimport { gregorianToBazi, dateObjectToBazi } from \"../FourPillar\"\nimport {\n  SIXTY_PILLAR,\n  DIRECTION,\n  QM_SAN_YUAN,\n  SIXTY_FOUR,\n  TRIGRAM_BINARY,\n  STAR,\n  DOOR,\n} from \"../constants\"\nimport Ju from \"../reference/Ju.json\"\nimport { addHours, parseISO } from \"date-fns\"\nimport { DATE_FORMAT } from \"../../constants\"\nconst CalenderData = require(\"./Calendar.json\")\n\nexport const get3VWithinRange = (dob, dateString, range, method) => {\n  const natalChart = getZhiRunHourChart(parseISO(dob))\n  const date = parseISO(dateString)\n  return [...Array(range).keys()].map(e => {\n    date.setDate(e + 1)\n    const monthChartObj = getMonthChartByDate(date)\n    const monthChart = lookupChart(\n      monthChartObj.structure,\n      monthChartObj.pillar\n    )\n    const dayChartObject = getDayChartByDate(date)\n    const dayChart = lookupChart(\n      dayChartObject.structure,\n      dayChartObject.pillar\n    )\n    const isDivineLightDate = isDivineLightDay(\n      natalChart.p.divineLight,\n      monthChart.chart,\n      dayChart.chart\n    )\n    const isDivineLight3Overlap = isDivineLightDay(\n      findChiefPalace(natalChart.ju.chart).palace,\n      monthChart.chart,\n      dayChart.chart\n    )\n\n    return {\n      date: format(date, DATE_FORMAT),\n      isDivineLight3Overlap,\n      isDivineLightDate,\n      isDivineBlessDate: isDivineBlessingDay(\n        natalChart.p.divineLight,\n        monthChart.chart,\n        dayChart.chart\n      ),\n      isDivineForceDate: isDivineForceDay(\n        natalChart.p.divineLight,\n        monthChart.chart,\n        dayChart.chart\n      ),\n    }\n  })\n  //.filter(e => e.isDivineLightDate || e.isDivineBlessDate || e.isDivineForceDate)\n}\n\nexport const isDivineLightDay = (sector, monthChart, dayChart) => {\n  const sectorIndex = DIRECTION.findIndex(e => e === sector)\n  return (\n    (monthChart[sectorIndex].door === \"生\" &&\n      dayChart[sectorIndex].god === \"天\") ||\n    (monthChart[sectorIndex].god === \"天\" &&\n      dayChart[sectorIndex].door === \"生\")\n  )\n}\n\nexport const isDivineBlessingDay = (sector, monthChart, dayChart) => {\n  const sectorIndex = DIRECTION.findIndex(e => e === sector)\n  return (\n    (monthChart[sectorIndex].door === \"生\" &&\n      dayChart[sectorIndex].god === \"符\") ||\n    (monthChart[sectorIndex].god === \"符\" &&\n      dayChart[sectorIndex].door === \"生\")\n  )\n}\n\nexport const isDivineForceDay = (sector, monthChart, dayChart) => {\n  const sectorIndex = DIRECTION.findIndex(e => e === sector)\n  return (\n    (monthChart[sectorIndex].god === \"天\" &&\n      dayChart[sectorIndex].god === \"符\") ||\n    (monthChart[sectorIndex].god === \"符\" && dayChart[sectorIndex].god === \"天\")\n  )\n}\n\nexport const searchHourChart = (startDate, endDate, searchFormation) => {\n  const result = []\n  const found = Ju.filter(v =>\n    v.chart.find(\n      g => searchFormation && g.f && g.f.indexOf(searchFormation) > -1\n    )\n  ).map(e => ({ structure: e.structure, hour: e.hour }))\n\n  while (startDate < endDate) {\n    const ju = getZhiRunHourChart(startDate)\n\n    if (\n      found.find(e => ju.ju.structure === e.structure && ju.ju.hour === e.hour)\n    ) {\n      result.push(startDate)\n    }\n    startDate = addHours(startDate, 2)\n  }\n  return result\n}\n\nexport const getZhiRunHourChart = dt => {\n  const bazi = dateObjectToBazi(dt)\n  const yearMonthKey = format(dt, \"yyyyMM\")\n  const dayOfMonth = format(dt, \"d\")\n  const structure = CalenderData[yearMonthKey][dayOfMonth - 1]\n  const ju = Ju.find(\n    e => e.structure === structure && e.hour === bazi.GanZhiHour.ganzhi\n  )\n\n  const chiefPalace = ju.chart.findIndex(e => e.god === \"符\")\n  const originalStarPalace =\n    STAR[chiefPalace > 4 ? chiefPalace - 1 : chiefPalace]\n  const profile = {\n    dayStem: bazi.GanZhiDay.ganzhi.substring(0, 1),\n    hourStem: bazi.GanZhiHour.ganzhi.substring(0, 1),\n    divineBless: findDivineBlessing(ju.chart).palace,\n    divineLight: findDivineLight(ju.chart, originalStarPalace).palace,\n    divineForce: findDivineForce(ju.chart).palace,\n  }\n  return {\n    ju: {\n      ...ju,\n      isoString: dt.toISOString(),\n      bazi,\n    },\n    p: profile,\n    profile: [\n      {\n        title: \"Day Stem\",\n\n        label: profile.dayStem,\n      },\n      {\n        title: \"Hour Stem\",\n        label: profile.hourStem,\n      },\n      {\n        title: \"Divine Blessing\",\n        label: profile.divineBless,\n        description: \"Initate Project\",\n      },\n      {\n        title: \"Divine Light\",\n        description: \"Self Improvement\",\n        label: profile.divineLight,\n      },\n      {\n        title: \"Divine Force\",\n        description: \"Negotiation\",\n        label: profile.divineForce,\n      },\n    ],\n  }\n}\n\nexport const getChaiBuHour = bazi => {\n  const chart = getQMCBChart(bazi)\n  const type =\n    Object.keys(QM_SAN_YUAN).findIndex(e => e === bazi.solarTerm) < 12\n      ? \"M\"\n      : \"F\"\n  return {\n    pillar: bazi.GanZhiHour.ganzhi,\n    structure: `${type}${chart.substr(1, 1)}`,\n  }\n}\n\nexport const getQMCBChart = bazi => {\n  const branchYuan = [\n    [\"子\", \"卯\", \"午\", \"酉\"],\n    [\"寅\", \"巳\", \"申\", \"亥\"],\n    [\"丑\", \"辰\", \"未\", \"戌\"],\n  ]\n\n  const reverseSixty = [\n    ...SIXTY_PILLAR.slice().reverse(),\n    ...SIXTY_PILLAR.slice().reverse(),\n  ]\n  const rest = reverseSixty.slice(\n    reverseSixty.findIndex(e => e === bazi.GanZhiDay.ganzhi)\n  )\n\n  const fuTouBranch = rest\n    .find(e => [\"己\", \"甲\"].includes(e.substr(0, 1)))\n    .substr(1, 1)\n  const yuan = branchYuan.findIndex(e => e.includes(fuTouBranch))\n  const type =\n    Object.keys(QM_SAN_YUAN).findIndex(e => e === bazi.solarTerm) < 12\n      ? \"M\"\n      : \"F\"\n\n  return `${type}${QM_SAN_YUAN[bazi.solarTerm][yuan]}`\n}\n\nconst getQMChart = (y, m, d, h) => {\n  const calDate = new Date(y, m - 1, d)\n  const yearMonthKey = format(calDate, \"yyyyMM\")\n  const dayIndex = Number(format(calDate, \"d\")) - 1\n  return {\n    pillar: h,\n    structure:\n      CalenderData[yearMonthKey] && CalenderData[yearMonthKey][dayIndex],\n  }\n}\n\nexport const getZRQMHourChart = (y, m, d, h) => {\n  return getHourChart(gregorianToBazi(y, m, d, h))\n}\n\nexport const getHourChart = bazi => {\n  return getQMChart(\n    bazi.westernYear,\n    bazi.westernMonth,\n    bazi.westernDay,\n    bazi.GanZhiHour.ganzhi\n  )\n}\n\nexport const searchChart = (filterObject, haystack) => {\n  return haystack\n    .filter(v => {\n      const kk = v.chart.map((obj, i) => {\n        const compare = filterObject[i]\n        const l = Object.keys(compare).map(k => {\n          const o = compare[k]\n          return o === \"\" ? true : o.indexOf(obj[k]) > -1 ? true : false\n        })\n        return l.every(e => e)\n      })\n      return kk.every(e => e)\n    })\n    .map(e => ({ structure: e.structure, hour: e.hour }))\n}\n\nconst element = {\n  red: [\"S\", \"丁\", \"丙\", \"景\", \"英\", \"巳\", \"午\", \"離\"],\n  \"#00739D\": [\"N\", \"壬\", \"癸\", \"休\", \"蓬\", \"子\", \"亥\", \"坎\"],\n  \"#145A32\": [\n    \"E\",\n    \"SE\",\n    \"乙\",\n    \"杜\",\n    \"傷\",\n    \"辅\",\n    \"沖\",\n    \"輔\",\n    \"寅\",\n    \"卯\",\n    \"震\",\n    \"巽\",\n    \"甲\",\n  ],\n  \"#A2423D\": [\n    \"NE\",\n    \"SW\",\n    \"死\",\n    \"生\",\n    \"芮\",\n    \"任\",\n    \"戊\",\n    \"己\",\n    \"丑\",\n    \"辰\",\n    \"未\",\n    \"戌\",\n    \"艮\",\n    \"坤\",\n  ],\n  \"#777777\": [\n    \"W\",\n    \"NW\",\n    \"庚\",\n    \"辛\",\n    \"开\",\n    \"柱\",\n    \"心\",\n    \"驚\",\n    \"開\",\n    \"申\",\n    \"酉\",\n    \"乾\",\n    \"兌\",\n  ],\n}\n\nexport const getColor = word => {\n  const color = Object.keys(element)\n  return color.find(colorCode => element[colorCode].includes(word))\n}\n\nexport const getDayChartByDate = date => {\n  return getDayChart(date.getFullYear(), date.getMonth() + 1, date.getDate())\n}\n\nexport const getDayChart = (year, month, day) => {\n  const lookup = {\n    9: [\"夏至\", \"小暑\", \"大暑\", \"立秋\"],\n    1: [\"冬至\", \"小寒\", \"大寒\", \"立春\"],\n    3: [\"处暑\", \"白露\", \"秋分\", \"寒露\"],\n    7: [\"雨水\", \"惊蛰\", \"春分\", \"清明\"],\n    6: [\"霜降\", \"立冬\", \"小雪\", \"大雪\"],\n    4: [\"谷雨\", \"立夏\", \"小满\", \"芒种\"],\n  }\n  const removeSign = n => (n < 0 ? n * -1 : n)\n  const bazi = gregorianToBazi(year, month, day, 12)\n  const start = Object.keys(lookup).find(startJu =>\n    lookup[startJu].includes(bazi.solarTerm)\n  )\n  const chartType = [\"1\", \"7\", \"4\"].includes(start) ? \"M\" : \"F\"\n  const index = SIXTY_PILLAR.indexOf(bazi.GanZhiDay.ganzhi)\n  const chart =\n    chartType === \"M\"\n      ? (index - 1 + Number(start)) % 9\n      : removeSign(start - Number(index)) % 9\n  const structure =\n    chartType === \"M\" ? `${chartType}${chart + 1}` : `${chartType}${9 - chart}`\n  return { structure, pillar: bazi.GanZhiDay.ganzhi }\n}\n\nexport const matchCriteria = (chart1, chart2, palaceIndex, contains) => {\n  return (\n    contains.filter(e =>\n      [\n        chart1[palaceIndex].god,\n        chart1[palaceIndex].door,\n        chart1[palaceIndex].star,\n        chart2[palaceIndex].god,\n        chart2[palaceIndex].door,\n        chart2[palaceIndex].star,\n      ].includes(e)\n    ).length === contains.length\n  )\n}\n\nexport const findChiefPalace = chart => findSymbol(chart, \"god\", \"符\")\n\nexport const findDivineBlessing = chart => findSymbol(chart, \"god\", \"天\")\n\nexport const findDivineLight = (chart, star) => findSymbol(chart, \"star\", star)\n\nexport const findDivineForce = chart => findSymbol(chart, \"door\", \"生\")\n\nexport const findSymbol = (chart, key, word) => {\n  return {\n    palace: DIRECTION[chart.findIndex(e => e[key] === word)],\n    symbol: word,\n  }\n}\n\nexport const starDoorToHexagram = (star, door) => {\n  const doorBinaryIndex = DOOR.findIndex(e => e === door)\n  const starBinaryIndex = STAR.findIndex(e => e === star)\n\n  const hexBinary =\n    TRIGRAM_BINARY[doorBinaryIndex] + TRIGRAM_BINARY[starBinaryIndex]\n  return SIXTY_FOUR[hexBinary]\n}\n\nexport const getMonthChartByDate = date => {\n  return getMonthChart(date.getFullYear(), date.getMonth() + 1, date.getDate())\n}\n\nexport const lookupChart = (structure, hour) => {\n  return Ju.find(e => e.structure === structure && e.hour === hour)\n}\n\nexport const getMonthChart = (year, month, day) => {\n  const yin = [1, 4, 7]\n  const bazi = gregorianToBazi(year, month, day, 12)\n\n  const lookup = [\n    ...SIXTY_PILLAR.slice(0, 5),\n    ...SIXTY_PILLAR.slice(15, 20),\n    ...SIXTY_PILLAR.slice(30, 35),\n    ...SIXTY_PILLAR.slice(45, 50),\n\n    ...SIXTY_PILLAR.slice(5, 10),\n    ...SIXTY_PILLAR.slice(20, 25),\n    ...SIXTY_PILLAR.slice(35, 40),\n    ...SIXTY_PILLAR.slice(50, 55),\n\n    ...SIXTY_PILLAR.slice(10, 15),\n    ...SIXTY_PILLAR.slice(25, 30),\n    ...SIXTY_PILLAR.slice(40, 45),\n    ...SIXTY_PILLAR.slice(55, 60),\n  ]\n\n  const index = lookup.indexOf(bazi.GanZhiYear.ganzhi)\n  const ju = yin.find((ju, i) => i * 20 - 1 < index && index < (i + 1) * 20)\n  const structure = `F${ju}`\n  return { structure, pillar: bazi.GanZhiMonth.ganzhi }\n}\n\nexport const getSanYuanYearChart = date => {\n  const year1928Structure = 9\n\n  const bazi = gregorianToBazi(\n    date.getFullYear(),\n    date.getMonth() + 1,\n    date.getDate(),\n    date.getHours()\n  )\n  const toYear = [\"小寒\", \"大寒\"].includes(bazi.solarTerm)\n    ? date.getFullYear() - 1\n    : date.getFullYear()\n  const newStructure = year1928Structure - ((toYear - 1928) % 9)\n  return {\n    pillar: bazi.GanZhiYear.ganzhi,\n    structure: `F${newStructure}`,\n  }\n}\n","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_HOUR = 3600000;\n/**\n * @name addHours\n * @category Hour Helpers\n * @summary Add the specified number of hours to the given date.\n *\n * @description\n * Add the specified number of hours to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the hours added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 2 hours to 10 July 2014 23:00:00:\n * const result = addHours(new Date(2014, 6, 10, 23, 0), 2)\n * //=> Fri Jul 11 2014 01:00:00\n */\n\nexport default function addHours(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_HOUR);\n}","import toInteger from \"../_lib/toInteger/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * const result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return !isNaN(date);\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n}","export default function buildFormatLongFn(args) {\n  return function () {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {}; // TODO: Remove String()\n\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from \"../../../_lib/buildFormatLongFn/index.js\";\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex; // @ts-ignore: For some reason TypeScript just don't want to match it, no matter how hard we try. I challange you to try to remove it!\n\n    return valuesArray[index];\n  };\n}","export default function buildMatchFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var key = Array.isArray(parsePatterns) ? findIndex(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    }) : findKey(parsePatterns, function (pattern) {\n      return pattern.test(matchedString);\n    });\n    var value;\n    value = args.valueCallback ? args.valueCallback(key) : key;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n\n  return undefined;\n}","import buildMatchPatternFn from \"../../../_lib/buildMatchPatternFn/index.js\";\nimport buildMatchFn from \"../../../_lib/buildMatchFn/index.js\";\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function valueCallback(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function valueCallback(index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","export default function buildMatchPatternFn(args) {\n  return function (string) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var matchResult = string.match(args.matchPattern);\n    if (!matchResult) return null;\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n    if (!parseResult) return null;\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    var rest = string.slice(matchedString.length);\n    return {\n      value: value,\n      rest: rest\n    };\n  };\n}","import formatDistance from \"./_lib/formatDistance/index.js\";\nimport formatLong from \"./_lib/formatLong/index.js\";\nimport formatRelative from \"./_lib/formatRelative/index.js\";\nimport localize from \"./_lib/localize/index.js\";\nimport match from \"./_lib/match/index.js\";\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildLocalizeFn from \"../../../_lib/buildLocalizeFn/index.js\";\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter']\n}; // Note: in English, the names of days of the week and months are capitalized.\n// If you are making a new locale based on this one, check if the same is true for the language you're working on.\n// Generally, formatted dates should look like they are in the middle of a sentence,\n// e.g. in Spanish language the weekdays and months should be in the lowercase.\n\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import toInteger from \"../_lib/toInteger/index.js\";\nimport addMilliseconds from \"../addMilliseconds/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * const result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from \"../../addLeadingZeros/index.js\";\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function M(date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function d(date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function a(date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaa':\n        return dayPeriodEnumValue;\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function H(date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function m(date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function s(date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from \"../getUTCISOWeekYear/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from \"../toInteger/index.js\";\nimport toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toInteger from \"../toInteger/index.js\";\nimport getUTCWeekYear from \"../getUTCWeekYear/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\"; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import lightFormatters from \"../lightFormatters/index.js\";\nimport getUTCDayOfYear from \"../../../_lib/getUTCDayOfYear/index.js\";\nimport getUTCISOWeek from \"../../../_lib/getUTCISOWeek/index.js\";\nimport getUTCISOWeekYear from \"../../../_lib/getUTCISOWeekYear/index.js\";\nimport getUTCWeek from \"../../../_lib/getUTCWeek/index.js\";\nimport getUTCWeekYear from \"../../../_lib/getUTCWeekYear/index.js\";\nimport addLeadingZeros from \"../../addLeadingZeros/index.js\";\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n};\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n * |  p! | Long localized time            |  P! | Long localized date            |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n * - `P` is long localized date format\n * - `p` is long localized time format\n */\n\nvar formatters = {\n  // Era\n  G: function G(date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function y(date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function Y(date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function R(date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function u(date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function Q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function M(date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function L(date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function w(date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function I(date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function d(date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function D(date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function E(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function e(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function c(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function i(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function a(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function b(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        }).toLowerCase();\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function B(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function H(date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function K(date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function k(date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function m(date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function s(date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function X(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function x(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function O(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function z(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function t(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function T(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","import toDate from \"../../toDate/index.js\";\nimport startOfUTCWeek from \"../startOfUTCWeek/index.js\";\nimport startOfUTCWeekYear from \"../startOfUTCWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport startOfUTCISOWeek from \"../startOfUTCISOWeek/index.js\";\nimport startOfUTCISOWeekYear from \"../startOfUTCISOWeekYear/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toDate from \"../../toDate/index.js\";\nimport requiredArgs from \"../requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","import isValid from \"../isValid/index.js\";\nimport defaultLocale from \"../locale/en-US/index.js\";\nimport subMilliseconds from \"../subMilliseconds/index.js\";\nimport toDate from \"../toDate/index.js\";\nimport formatters from \"../_lib/format/formatters/index.js\";\nimport longFormatters from \"../_lib/format/longFormatters/index.js\";\nimport getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from \"../_lib/protectedTokens/index.js\";\nimport toInteger from \"../_lib/toInteger/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\"; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aa   | AM, PM                            |       |\n * |                                 | aaa     | am, pm                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bb   | AM, PM, noon, midnight            |       |\n * |                                 | bbb     | am, pm, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 001, ..., 999                |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 04/29/1453                        | 7     |\n * |                                 | PP      | Apr 29, 1453                      | 7     |\n * |                                 | PPP     | April 29th, 1453                  | 7     |\n * |                                 | PPPP    | Friday, April 29th, 1453          | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 04/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | Apr 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | April 29th, 1453 at ...           | 7     |\n * |                                 | PPPPpppp| Friday, April 29th, 1453 at ...   | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}"],"sourceRoot":""}