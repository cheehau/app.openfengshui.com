{"version":3,"sources":["webpack:///./node_modules/date-fns/esm/toDate/index.js","webpack:///./node_modules/lunar-calendar/lib/LunarCalendar.js","webpack:///./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","webpack:///./src/cm-lib/DateSelection/index.js","webpack:///./node_modules/date-fns/esm/startOfDay/index.js","webpack:///./node_modules/date-fns/esm/differenceInCalendarDays/index.js","webpack:///./src/cm-lib/util/number.js","webpack:///./src/cm-lib/FourPillar/index.js"],"names":["toDate","argument","arguments","argStr","Object","prototype","toString","call","Date","getTime","console","warn","Error","stack","NaN","extend","o","c","p","creatLenArr","year","month","len","start","arr","k","i","push","day","errorCode","cache","cacheUtil","current","setCurrent","this","clear","set","key","value","get","formateDayD4","DATA","heavenlyStems","earthlyBranches","zodiac","solarTerm","monthCn","dateCn","worktime","solarFestival","lunarFestival","lunarInfo","termInfo","getLunarYearDays","yearData","leapMonth","monthDataArr","split","length","unshift","yearDays","monthDays","getLunarByBetween","between","year1","month1","day1","date","getDaysBetweenSolar","lunarYearDays","end","Math","abs","tempDays","getLunarDateByBetween","getTerm","y","n","UTC","getUTCDate","getYearZodiac","cyclical","num","getLunarYearName","offset","getLunarMonthName","getLunarDayName","getSolarMonthDays","isLeapYear","formateDate","_minYear","argsLen","now","parseInt","getFullYear","getMonth","getDate","minYear","error","msg","solarToLunar","_year","_month","_day","inputDate","term2","termList","res","getYearTerm","GanZhiYear","GanZhiMonth","lunarDate","lunarLeapMonth","getLunarLeapYear","lunarMonthName","lunarFtv","lunarMonthDays","GanZhiDay","term","lunarYear","lunarMonth","lunarDay","lunarDayName","solarCalendar","fill","preMonthDays","preMonthData","nextMonthData","firstDay","getDay","monthData","preYear","preMonth","concat","nextYear","nextMonth","fillLen","LunarCalendar","lunarToSolar","days","getDaysBetweenZheng","zenMonth","zenDay","offDate","calendar","calendarData","cData","lunarData","setWorktime","workData","getTimezoneOffsetInMilliseconds","utcDate","getHours","getMinutes","getSeconds","getMilliseconds","setUTCFullYear","get12Officer","monthBranch","dayBranch","TWELVE_OFFICER","determineOfficerIndex","EB","findIndex","e","monthBranchNumber","dayBranchNumber","distance","getEmptinessBranch","pillar","iterate","SIXTY_PILLAR","distanceToGui","HS","substr","pillarIndex","pillar1","pillar2","startOfDay","dirtyDate","requiredArgs","setHours","differenceInCalendarDays","dirtyDateLeft","dirtyDateRight","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","round","isEven","number","getPillarSequence","direction","concatPillar","Array","ceil","reduce","a","useConcatPillar","slice","reverse","indexOf","deriveStars","hour","ganzhi","dayStem","classical","ClassicalStars","空亡","join","blindman","_gregorianToBazi","min","gender","result","found","Number","GanZhiHour","calculateHour","lunarMonthNumber","dateObjectToBazi","dateOfMonth","gregorianToBazi","westernAge","bazi","yearMonthString","padStart","SolarTerm","find","d","NextSolarTerm","principalSolarTerms","SOLAR_TERM","filter","principalTermForDate","includes","s","ptIndex","referencePT","nextPrincipalTermForDate","transitionDay","dayToNextTerm","parseISO","dayToNextPrincipalTerm","dayToPreviousPrincipalTerm","getSolarTerm","forward","startAgeQuotient","floor","startWesternAge","tenYearCycle","hundredYear","monthBazi","monthCycle","convertGanZhi","activeLuckPillarIndex","currentYearPillar","currentLuckPillar","westernYear","westernMonth","westernDay","startAge","map","stars","dayNayin","NaYin","ganIndex","zhiIndex","dateToBazi","dayGan","hourBranchIndex","dayStemIndex","hourStemIndex","calculateHourStem","dayStemNumber","hourBranchNumber"],"mappings":"6FAAA,kDAgCe,SAASA,EAAOC,GAC7B,YAAa,EAAGC,WAChB,IAAIC,EAASC,OAAOC,UAAUC,SAASC,KAAKN,GAE5C,OAAIA,aAAoBO,MAA4B,iBAAbP,GAAoC,kBAAXE,EAEvD,IAAIK,KAAKP,EAASQ,WACI,iBAAbR,GAAoC,oBAAXE,EAClC,IAAIK,KAAKP,IAES,iBAAbA,GAAoC,oBAAXE,GAAoD,oBAAZO,UAE3EA,QAAQC,KAAK,oJAEbD,QAAQC,MAAK,IAAIC,OAAQC,QAGpB,IAAIL,KAAKM,Q,skoHCjDpB,OASA,WACE,IAAIC,EAAS,SAAgBC,EAAGC,GAC9B,GAAID,GAAKC,GAAiB,iBAALA,EACnB,IAAK,IAAIC,KAAKD,EACZD,EAAEE,GAAKD,EAAEC,GAIb,OAAOF,GAGLG,EAAc,SAAqBC,EAAMC,EAAOC,EAAKC,GACvD,IAAIC,EAAM,GAEV,GAAIF,EAAM,EAAG,OAAOE,EAGpB,IAFA,IAAIC,EAFJF,EAAQA,GAAS,EAIRG,EAAI,EAAGA,EAAIJ,EAAKI,IACvBF,EAAIG,KAAK,CACPP,KAAMA,EACNC,MAAOA,EACPO,IAAKH,IAEPA,IAGF,OAAOD,GAGLK,EAEG,8BAGHC,EAAQ,KAERC,EAAY,CAEdC,QAAS,GACTC,WAAY,SAAoBb,GAC1Bc,KAAKF,SAAWZ,IAClBc,KAAKF,QAAUZ,EACfc,KAAKC,UAGTC,IAAK,SAAaC,EAAKC,GAGrB,OAFKR,IAAOA,EAAQ,IACpBA,EAAMO,GAAOC,EACNR,EAAMO,IAEfE,IAAK,SAAaF,GAEhB,OADKP,IAAOA,EAAQ,IACbA,EAAMO,IAEfF,MAAO,WACLL,EAAQ,OAIRU,EAAe,SAAsBnB,EAAOO,GAI9C,MAAO,KAFPP,GADAA,GAAgB,GACA,GAAK,IAAMA,EAAQA,IACnCO,EAAMA,EAAM,GAAK,IAAMA,EAAMA,IAQ3Ba,EAAO,CACTC,cAAe,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAE7DC,gBAAiB,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAEzEC,OAAQ,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAEhEC,UAAW,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAEtJC,QAAS,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAAM,MAClEC,OAAQ,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,OAG3LC,EAAW,CAEf,MAAiB,CACf,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,GAEX,MAAiB,CACf,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,EACT,MAAS,IAGPC,EAAgB,CAClB,MAAS,MACT,MAAS,QACT,MAAS,QACT,MAAS,MACT,MAAS,QACT,MAAS,QACT,MAAS,SACT,MAAS,MACT,MAAS,eACT,MAAS,QACT,MAAS,SACT,MAAS,cACT,MAAS,wBACT,MAAS,OACT,MAAS,QACT,MAAS,WACT,MAAS,cACT,MAAS,UACT,MAAS,8BACT,MAAS,QACT,MAAS,QACT,MAAS,WACT,MAAS,WACT,MAAS,MACT,MAAS,MACT,MAAS,UACT,MAAS,SACT,MAAS,QACT,MAAS,QACT,MAAS,QACT,MAAS,SACT,MAAS,UACT,MAAS,WACT,MAAS,QACT,MAAS,QACT,MAAS,QACT,MAAS,QACT,MAAS,QACT,MAAS,YACT,MAAS,UACT,MAAS,QACT,MAAS,QACT,MAAS,qBACT,MAAS,UACT,MAAS,UACT,MAAS,QACT,MAAS,QACT,MAAS,MACT,MAAS,aACT,MAAS,WACT,MAAS,iBACT,MAAS,UACT,MAAS,QACT,MAAS,UACT,MAAS,WACT,MAAS,WACT,MAAS,QACT,MAAS,QACT,MAAS,OACT,MAAS,kBACT,MAAS,eACT,MAAS,QACT,MAAS,MACT,MAAS,eACT,MAAS,cACT,MAAS,kBACT,MAAS,cACT,MAAS,QACT,MAAS,cACT,MAAS,QACT,MAAS,UACT,MAAS,UACT,MAAS,eACT,MAAS,QACT,MAAS,cACT,MAAS,QACT,MAAS,cACT,MAAS,QACT,MAAS,oBACT,MAAS,WACT,MAAS,SACT,MAAS,eACT,MAAS,cACT,MAAS,gBACT,MAAS,SACT,MAAS,SACT,MAAS,iBACT,MAAS,UACT,MAAS,QACT,MAAS,QACT,MAAS,UACT,MAAS,yBACT,MAAS,SACT,MAAS,QACT,MAAS,MACT,MAAS,MACT,MAAS,WAGPC,EAAgB,CAClkB/L,SAASC,EAAiBjC,GAOxB,IANA,IAAIkC,EAAWH,EAAU/B,EA9Ob,MA+ORmC,EAAYD,EAAS,GAGrBE,EADYF,EAAS,GAAGhD,SAAS,GACRmD,MAAM,IAE1B/B,EAAI,EAAGA,EAAI,GAAK8B,EAAaE,OAAQhC,IAC5C8B,EAAaG,QAAQ,GAGvB,IAAIrC,EAAMiC,EAAY,GAAK,GAEvBK,EAAW,EACXC,EAAY,GAEhB,IAASnC,EAAI,EAAGA,EAAIJ,EAAKI,IACA,GAAnB8B,EAAa9B,IACfkC,GAAY,GACZC,EAAUlC,KAAK,MAEfiC,GAAY,GACZC,EAAUlC,KAAK,KAInB,MAAO,CACLiC,SAAUA,EACVC,UAAWA,GAoCf,SAASC,EAAkB1C,EAAMC,EAAOO,GACtC,IAAI0B,EAAWH,EAAU/B,EA9Sb,MAiTR2C,EAgBN,SAA6B3C,EAAMC,EAAOO,EAAKoC,EAAOC,EAAQC,GAC5D,IAAIC,EAAO,IAAI3D,KAAKY,EAAMC,EAAOO,GAAKnB,UAEtC,OADY,IAAID,KAAKwD,EAAOC,EAAQC,GAAMzD,UAC1B0D,GAAQ,MAnBVC,CAAoBhD,EAFnBkC,EAAS,GAE2B,EADtCA,EAAS,GACwClC,EAAMC,EAAOO,GAE3E,OAAe,GAAXmC,EAEK,CAAC3C,EAAM,EAAG,GAlCrB,SAA+BA,EAAM2C,GAOnC,IANA,IAAIM,EAAgBhB,EAAiBjC,GACjCkD,EAAMP,EAAU,EAAIA,EAAUM,EAAcT,SAAWW,KAAKC,IAAIT,GAChEF,EAAYQ,EAAcR,UAC1BY,EAAW,EACXpD,EAAQ,EAEHK,EAAI,EAAGA,EAAImC,EAAUH,OAAQhC,IAGpC,IAFA+C,GAAYZ,EAAUnC,IAEP4C,EAAK,CAClBjD,EAAQK,EACR+C,GAAsBZ,EAAUnC,GAChC,MAIJ,MAAO,CAACN,EAAMC,EAAOiD,EAAMG,EAAW,GAoB7BC,CADSX,EAAU,EAAI3C,EAAOA,EAAO,EACJ2C,GAgD5C,SAASY,EAAQC,EAAGC,GAElB,OADc,IAAIrE,KAAK,eAAiBoE,EAAI,MAAsB,IAAdxB,EAASyB,GAAarE,KAAKsE,IAAI,KAAM,EAAG,EAAG,GAAI,EAAG,KACvFC,aA4BjB,SAASC,EAAc5D,GAGrB,OAAOqB,EAAKG,QAFFxB,EAAO,KAAO,IAEC,IAS3B,SAAS6D,EAASC,GAChB,OAAOzC,EAAKC,cAAcwC,EAAM,IAAMzC,EAAKE,gBAAgBuC,EAAM,IASnE,SAASC,EAAiB/D,EAAMgE,GAG9B,OAAOH,EAAS7D,EAAO,KAAO,IAF9BgE,EAASA,GAAU,IAYrB,SAASC,EAAkBjE,EAAMC,EAAO+D,GAGtC,OAAOH,EAAyB,IAAf7D,EAAO,MAAaC,EAAQ,IAF7C+D,EAASA,GAAU,IAWrB,SAASE,EAAgBlE,EAAMC,EAAOO,GAIpC,OAAOqD,EADWzE,KAAKsE,IAAI1D,EAAMC,EAAOO,GAAO,MAAW,MAAQ,IAWpE,SAAS2D,EAAkBnE,EAAMC,GAE/B,MADgB,CAAC,GAAImE,EAAWpE,GAAQ,GAAK,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,IACpEC,GASnB,SAASmE,EAAWpE,GAClB,OAAOA,EAAO,GAAK,GAAKA,EAAO,KAAO,GAAKA,EAAO,KAAO,EAQ3D,SAASqE,EAAYrE,EAAMC,EAAOO,EAAK8D,GACrC,IAAIC,EAAUzF,UAAUwD,OACpBkC,EAAM,IAAIpF,KAId,OAHAY,EAAOuE,EAAUE,SAASzE,EAAM,IAAMwE,EAAIE,cAC1CzE,EAAQsE,EAAUE,SAASxE,EAAQ,EAAG,IAAMuE,EAAIG,WAChDnE,EAAM+D,GAAUE,SAASjE,EAAK,KAAuBgE,EAAII,UACrD5E,GAAQsE,GAAsBO,OAAgB7E,EA3dtC,KA2d6D,CACvE8E,MAAO,IACPC,IAAKtE,GAEA,CACLT,KAAMA,EACNC,MAAOA,EACPO,IAAKA,GAoCT,SAASwE,EAAaC,EAAOC,EAAQC,GACnC,IAAIC,EAAYf,EAAYY,EAAOC,EAAQC,EAzgB/B,MA0gBZ,GAAIC,EAAUN,MAAO,OAAOM,EAC5B,IAAIpF,EAAOoF,EAAUpF,KACjBC,EAAQmF,EAAUnF,MAClBO,EAAM4E,EAAU5E,IACpBG,EAAUE,WAAWb,GAErB,IAAIqF,EAAQ1E,EAAUQ,IAAI,SAAWR,EAAUQ,IAAI,SAAWR,EAAUK,IAAI,QAASuC,EAAQvD,EAAM,IAE/FsF,EAAW3E,EAAUQ,IAAI,YAAcR,EAAUQ,IAAI,YAAcR,EAAUK,IAAI,WA/JvF,SAAqBhB,GAInB,IAHA,IAAIuF,EAAM,GACNtF,EAAQ,EAEHK,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAIE,EAAM+C,EAAQvD,EAAMM,GACpBA,EAAI,GAAK,GAAGL,IAChBsF,EAAInE,EAAanB,EAAQ,EAAGO,IAAQa,EAAKI,UAAUnB,GAGrD,OAAOiF,EAqJ0FC,CAAYxF,IAGzGyF,EAAaxF,EAAQ,GAAc,GAATA,GAAcO,GAAO6E,EAAQrF,EAAO,EAAIA,EAElE0F,EAAclF,GAJF+C,EAAQvD,EAAc,EAARC,GAIOA,EAAQ,EAAIA,EAE7C0F,EAAYjD,EAAkB1C,EAAMC,EAAOO,GAC3CoF,EAxTN,SAA0B5F,GAExB,OADe+B,EAAU/B,EAnOb,MAoOI,GAsTK6F,CAAiBF,EAAU,IAC5CG,EAAiB,GAGnBA,EADEF,EAAiB,GAAKA,GAAkBD,EAAU,GACnC,IAAMtE,EAAKK,QAAQiE,EAAU,GAAK,GAAK,IAC/CC,EAAiB,GAAKD,EAAU,GAAKC,EAC7BvE,EAAKK,QAAQiE,EAAU,GAAK,GAAK,IAEjCtE,EAAKK,QAAQiE,EAAU,IAAM,IAIhD,IAAII,EAAW,GACXC,EAAiB/D,EAAiB0D,EAAU,IAAIlD,UA2BpD,OAxBEsD,EADEJ,EAAU,IAAMK,EAAe1D,OAAS,GAAKqD,EAAU,IAAMK,EAAeA,EAAe1D,OAAS,GAC3FR,EAAqB,MACvB8D,EAAiB,GAAKD,EAAU,GAAKC,EACnC9D,EAAcV,EAAauE,EAAU,GAAK,EAAGA,EAAU,KAEvD7D,EAAcV,EAAauE,EAAU,GAAIA,EAAU,KAGtD,CACRnE,OAAQoC,EAAc6B,GACtBA,WAAY1B,EAAiB0B,GAC7BC,YAAazB,EAAkBjE,EAAM0F,GACrCO,UAAW/B,EAAgBlE,EAAMC,EAAOO,GAExCoB,SAAUA,EAAS,IAAM5B,IAAS4B,EAAS,IAAM5B,GAAMoB,EAAanB,EAAOO,IAAQoB,EAAS,IAAM5B,GAAMoB,EAAanB,EAAOO,IAAQ,EACpI0F,KAAMZ,EAASlE,EAAanB,EAAOO,IACnC2F,UAAWR,EAAU,GACrBS,WAAYT,EAAU,GAAK,EAC3BU,SAAUV,EAAU,GACpBG,eAAgBA,EAChBQ,aAAcjF,EAAKM,OAAOgE,EAAU,GAAK,GACzCC,eAAgBA,EAChB/D,cAAeA,EAAcT,EAAanB,EAAOO,IACjDsB,cAAeiE,GAqCnB,SAASQ,EAActB,EAAOC,EAAQsB,GACpC,IAAIpB,EAAYf,EAAYY,EAAOC,GACnC,GAAIE,EAAUN,MAAO,OAAOM,EAC5B,IAGIqB,EAAcC,EAAcC,EAH5B3G,EAAOoF,EAAUpF,KACjBC,EAAQmF,EAAUnF,MAGlBsF,EAAM,CACRqB,SAHc,IAAIxH,KAAKY,EAAMC,EAAO,GAGhB4G,SAEpBpE,UAAW0B,EAAkBnE,EAAMC,GAEnC6G,UAAW,IAIb,GAFAvB,EAAIuB,UAAY/G,EAAYC,EAAMC,EAAQ,EAAGsF,EAAI9C,UAAW,GAExD+D,EAAM,CACR,GAAIjB,EAAIqB,SAAW,EAAG,CAEpB,IAAIG,EAAU9G,EAAQ,EAAI,EAAID,EAAO,EAAIA,EACrCgH,EAAW/G,EAAQ,EAAI,EAAI,GAAKA,EAAQ,EAC5CwG,EAAetC,EAAkB4C,EAASC,GAC1CN,EAAe3G,EAAYgH,EAASC,EAAW,EAAGzB,EAAIqB,SAAUH,EAAelB,EAAIqB,SAAW,GAC9FrB,EAAIuB,UAAYJ,EAAaO,OAAO1B,EAAIuB,WAG1C,GAAI,GAAQvB,EAAIuB,UAAUxE,QAAU,EAAG,CAErC,IAAI4E,EAAWjH,EAAQ,EAAI,GAAKD,EAAO,EAAIA,EACvCmH,EAAYlH,EAAQ,EAAI,GAAK,EAAIA,EAAQ,EACzCmH,EAAU,GAAQ7B,EAAIuB,UAAUxE,OACpCqE,EAAgB5G,EAAYmH,EAAUC,EAAY,EAAGC,EAAS,GAC9D7B,EAAIuB,UAAYvB,EAAIuB,UAAUG,OAAON,IAIzC,OAAOpB,EAcT,IAAI8B,EAAgB,CAClBrC,aAAcA,EACdsC,aA3KF,SAAsBrC,EAAOC,EAAQC,GACnC,IAAIC,EAAYf,EAAYY,EAAOC,EAAQC,GAC3C,GAAIC,EAAUN,MAAO,OAAOM,EAC5B,IAAIpF,EAAOoF,EAAUpF,KAGjB2C,EAvKN,SAA6B3C,EAAMC,EAAOO,GAKxC,IAJA,IACIiC,EADgBR,EAAiBjC,GACPyC,UAC1B8E,EAAO,EAEFjH,EAAI,EAAGA,EAAImC,EAAUH,QACxBhC,EAAIL,EAD4BK,IAElCiH,GAAQ9E,EAAUnC,GAOtB,OAAOiH,EAAO/G,EAAM,EAyJNgH,CAAoBxH,EAFtBoF,EAAUnF,MACZmF,EAAU5E,KAGhB0B,EAAWH,EAAU/B,EAtfb,MAufRyH,EAAWvF,EAAS,GACpBwF,EAASxF,EAAS,GAClByF,EAAU,IAAIvI,KAAKY,EAAMyH,EAAW,EAAGC,GAAQrI,UAAsB,MAAVsD,EAE/D,MAAO,CACL3C,MAFF2H,EAAU,IAAIvI,KAAKuI,IAEHjD,cACdzE,MAAO0H,EAAQhD,WAAa,EAC5BnE,IAAKmH,EAAQ/C,YA4JfgD,SA7EF,SAAkB3C,EAAOC,EAAQsB,GAC/B,IAAIpB,EAAYf,EAAYY,EAAOC,GACnC,GAAIE,EAAUN,MAAO,OAAOM,EAK5B,IAJA,IAEIyC,EAAetB,EAFRnB,EAAUpF,KACToF,EAAUnF,MACyB,EAAGuG,GAEzClG,EAAI,EAAGA,EAAIuH,EAAaf,UAAUxE,OAAQhC,IAAK,CACtD,IAAIwH,EAAQD,EAAaf,UAAUxG,GAC/ByH,EAAY/C,EAAa8C,EAAM9H,KAAM8H,EAAM7H,MAAO6H,EAAMtH,KAC5Db,EAAOkI,EAAaf,UAAUxG,GAAIyH,GAGpC,OAAOF,GAiEPtB,cAAeA,EACfyB,YAVF,SAAqBC,GACnBtI,EAAOiC,EAAUqG,IAUjB9D,kBAAmBA,QAMlB,KAFD,aACE,OAAOkD,GACR,8BAruBL,I,kCCEe,SAASa,EAAgCnF,GACtD,IAAIoF,EAAU,IAAI/I,KAAKA,KAAKsE,IAAIX,EAAK2B,cAAe3B,EAAK4B,WAAY5B,EAAK6B,UAAW7B,EAAKqF,WAAYrF,EAAKsF,aAActF,EAAKuF,aAAcvF,EAAKwF,oBAEjJ,OADAJ,EAAQK,eAAezF,EAAK2B,eACrB3B,EAAK1D,UAAY8I,EAAQ9I,UAdlC,mC,0rhHCWaoJ,G,UAAe,SAACC,EAAaC,GACxC,OAAOC,IACLC,EACEC,IAAGC,WAAU,SAAAC,GAAC,OAAIA,IAAMN,KACxBI,IAAGC,WAAU,SAAAC,GAAC,OAAIA,IAAML,SAwBjBE,EAAwB,SAACI,EAAmBC,GACvD,IAAIC,EAAWD,EAAkBD,EAIjC,OAHIE,EAAW,IACbA,EAAW,GAAKA,GAEXA,GA8DIC,EAAqB,SAAAC,GAChC,IAAMC,EAAO,sBAAOC,KAAP,YAAwBA,MAC/BC,EAAgB,EAAIC,IAAGV,WAAU,SAAAC,GAAC,OAAIA,IAAMK,EAAOK,OAAO,EAAG,MAC7DC,EAAcL,EAAQP,WAAU,SAAAC,GAAC,OAAIA,IAAMK,KAAUG,EACrDI,EAAUN,EAAQK,EAAc,GAChCE,EAAUP,EAAQK,EAAc,GACtC,MAAO,CAACC,EAAQF,OAAO,EAAG,GAAIG,EAAQH,OAAO,EAAG,M,4GCvFnC,SAASI,EAAWC,GACjC,OAAAC,EAAA,GAAa,EAAGlL,WAChB,IAAIiE,EAAO,OAAAnE,EAAA,GAAOmL,GAElB,OADAhH,EAAKkH,SAAS,EAAG,EAAG,EAAG,GAChBlH,ECUM,SAASmH,EAAyBC,EAAeC,GAC9D,OAAAJ,EAAA,GAAa,EAAGlL,WAChB,IAAIuL,EAAiBP,EAAWK,GAC5BG,EAAkBR,EAAWM,GAC7BG,EAAgBF,EAAehL,UAAY,OAAA6I,EAAA,GAAgCmC,GAC3EG,EAAiBF,EAAgBjL,UAAY,OAAA6I,EAAA,GAAgCoC,GAIjF,OAAOnH,KAAKsH,OAAOF,EAAgBC,GA7CX,S,uOCHbE,EAAS,SAAAC,GAAM,OAAIA,EAAS,GAAM,G,4DC0DlCC,EAAoB,SAACvB,EAAQ/G,EAAQuI,QAAqB,IAArBA,OAAY,GAC5D,IAAMC,EAAe,YAAIC,MAAM5H,KAAK6H,KAAK1I,EAAS,GAAK,KAAK2I,QAAO,SAACC,EAAGzH,GACrE,MAAM,GAAN,mBAAWyH,GAAX,YAAiB3B,QAChB,IACG4B,EAAkBN,EACpBC,EACAA,EAAaM,QAAQC,UACnB1B,EAAcwB,EAAgBG,QAAQjC,GAC5C,OAAO8B,EAAgBC,MAAMzB,EAAaA,EAAcrH,IAGpDiJ,EAAc,SAACvL,EAAMC,EAAOO,EAAKgL,GACrC,IAAM7C,EAAYnI,EAAIiL,OAAO/B,OAAO,EAAG,GACjCgC,EAAUlL,EAAIiL,OAAO/B,OAAO,EAAG,GACrC,MAAO,CACLiC,UAAU,OAAD,UACJC,EAAejD,GACfiD,EAAeF,GAFX,CAGPG,KAAIzC,YAAmB5I,EAAIiL,QAAQK,KAAK,MAE1CC,SAAU,CACRF,KAAIzC,YAAmB5I,EAAIiL,QAAQK,KAAK,OAKxCE,EAAmB,SAAChM,EAAMC,EAAOO,EAAKgL,EAAWS,EAASC,QAAW,IAA/BV,MAAO,SAAwB,IAApBS,MAAM,GAC3D,IACMlJ,EAAO,IAAI3D,KAAKY,EADHC,EAAQ,EACaO,GAClC2L,EAAS9E,IAAcO,SAC3B7E,EAAK2B,cACL3B,EAAK4B,WAAa,EAClB5B,EAAK6B,WAEDwH,EAAQD,EAAOrF,UAAUiC,WAC7B,SAAAC,GAAC,OACCA,EAAEhJ,OAASqM,OAAOrM,IAClBgJ,EAAE/I,QAAUoM,OAAOpM,IACnB+I,EAAExI,MAAQ6L,OAAO7L,MAZoD,EAc1B2L,EAAOrF,UAAUsF,GAAxD3G,EAdiE,EAcjEA,WAAYC,EAdqD,EAcrDA,YAAaO,EAdwC,EAcxCA,UAC3BqG,EAAaC,EAActG,EAAUyD,OAAO,EAAG,GAAI8B,GACzD,OACEY,GAAS,GAAT,eACEI,iBAAkBL,EAAOrF,UAAUsF,GAAOhG,WAAa,GACpD+F,EAAOrF,UAAUsF,GAFtB,CAGE3G,aACAC,cACAO,YACAqG,gBAKOG,EAAmB,SAAC1J,EAAMmJ,GACrC,IAAMlM,EAAO+C,EAAK2B,cACZzE,EAAQ8C,EAAK4B,WAAa,EAC1B+H,EAAc3J,EAAK6B,UACnB4G,EAAOzI,EAAKqF,WACZ6D,EAAMlJ,EAAKsF,aACjB,OAAOsE,EAAgB3M,EAAMC,EAAOyM,EAAalB,EAAMS,EAAKC,IAGjDS,EAAkB,SAAC3M,EAAMC,EAAOO,EAAKgL,EAAMS,EAASC,QAAW,IAApBD,MAAM,GAC5D,IAAMW,EAAa,IAAIxN,KAAKA,KAAKoF,OAAOE,cAAgB1E,EAClD6M,EAAOb,EAAiBhM,EAAMC,EAAOO,EAAKgL,EAAMS,GACtD,GAAIY,EAAM,CAAC,IACHpH,EAAmDoH,EAAnDpH,WAAYC,EAAuCmH,EAAvCnH,YAAaO,EAA0B4G,EAA1B5G,UAAWqG,EAAeO,EAAfP,WACpCtK,EAlHkB,SAAChC,EAAMC,EAAOO,EAAKgL,EAAMS,GACnD,IAKMa,EAAe,GAAM9M,GALP,GAAGC,GAAQ8M,SAAS,EAAG,MACzB,GAAGvM,GAAMuM,SAAS,EAAG,KAIlB,KAHX,GAAGvB,GAAOuB,SAAS,EAAG,KAGX,KAFX,GAAGd,GAAMc,SAAS,EAAG,KAIzBtL,EAAYuL,EAAU5B,QACzBC,UACA4B,MAAK,SAAAjE,GAAC,OAAI8D,EAAkB9D,EAAEkE,KAC3BC,EAAgBH,EAAUC,MAAK,SAAAjE,GAAC,OAAIA,EAAEkE,EAAIzL,EAAUyL,KAEpDE,EAAsBC,IAAWC,QAAO,SAACtE,EAAG1I,GAAJ,OAAUA,EAAI,GAAM,KAC5DiN,EAAuBP,EAAU5B,QACpCC,UACA4B,MAAK,SAAAjE,GAAC,OAAI8D,EAAkB9D,EAAEkE,GAAKE,EAAoBI,SAASxE,EAAEyE,MAC/DC,EAAUN,EAAoBrE,WAClC,SAAAC,GAAC,OAAIA,IAAMuE,EAAqBE,KAE5BE,EAAcP,EACjBhC,MAAMsC,GACNzG,OAAOmG,EAAoBhC,MAAM,EAAGsC,IACjCE,EAA2BZ,EAAUC,MACzC,SAAAjE,GAAC,OAAI8D,EAAkB9D,EAAEkE,GAAKlE,EAAEyE,IAAME,EAAY,MAGpD,MAAO,CACLlM,UAAWA,EAAUgM,EACrBI,cAAepM,EAAUyL,EAAExD,OAAO,EAAG,KAAOoD,EAAgBpD,OAAO,EAAG,GACtEoE,cACE5D,YACE6D,YAASZ,EAAcD,GACvBa,YAASjB,IACP,EACNkB,uBAAwB9D,YACtB6D,YAASH,EAAyBV,GAClCa,YAASjB,IAEXmB,2BAA4B/D,YAC1B6D,YAASjB,GACTiB,YAASR,EAAqBL,KAyEfgB,CAAalO,EAAMC,EAAOO,EAAKgL,EAAMS,GAChDkC,EACQ,MAAXjC,GAAkBxB,EAAOnB,IAAa+B,QAAQ7F,KACnC,MAAXyG,IAAmBxB,EAAOnB,IAAa+B,QAAQ7F,IAC5C2I,EAAmBD,EACrBhL,KAAKkL,MAAMrM,EAASgM,uBAAyB,GAC7C7K,KAAKkL,MAAMrM,EAASiM,2BAA6B,GAI/CK,EACU,KAJEH,EACdnM,EAASgM,uBAAyB,EAClChM,EAASiM,2BAA6B,GAEtBG,EAAmB,EAAIA,EAErCG,EAAe3D,EAAkBlF,EAAa,GAAIyI,GAAS/C,MAC/D,EACA,IAEIoD,EAAc,CAAC,KAAM,MAAMhB,SAASxL,EAASP,WAC/CmJ,EAAkBnF,EAAY,KAAK2F,MAAM,EAAG,KAC5CR,EAAkBnF,EAAY,KAC5BgJ,EAAYzC,EAAiBhM,EAAMC,EAAO,IAC1CyO,EAAa9D,EAAkB6D,EAAU/I,YAAa,MAE5DD,EAAakJ,EAAclJ,GAC3BC,EAAciJ,EAAcjJ,GAC5BO,EAAY0I,EAAc1I,GAC1BqG,EAAaqC,EAAcrC,GAE3B,IAAMsC,EACJhC,GAAc0B,EACVnL,KAAKkL,OAAOzB,EAAa0B,GAAmB,KAC3C,EAEP,OAAO,OAAP,QACE1B,aACA0B,kBACAO,kBAAmBL,EAAY5B,GAC/BkC,kBAAmBP,EAAaK,GAChCG,YAAa/O,EACbgP,aAAc/O,EACdgP,WAAYzO,GACTwB,EACA6K,EATL,CAUEpH,aACAC,cACAO,YACAqG,aACA4C,SAAU/L,KAAKsH,MAAMtH,KAAKC,IAAIkL,IAC9BC,aAAcA,EACdC,YAAaA,EAAYW,KAAI,SAACnG,EAAG1I,GAAJ,MAAW,CACtC+I,OAAQL,EACRhJ,KAAMA,EAAOM,MAEfoO,aACAU,MAAO7D,EAAY9F,EAAYC,EAAaO,GAC5CoJ,SAAUC,EAAMrJ,EAAUwF,UAG5B,MAAO,IAILkD,EAAgB,SAAAlD,GACpB,IAAM8D,EAAW9F,IAAG6B,QAAQG,EAAO/B,OAAO,EAAG,IACvC8F,EAAW1G,IAAGwC,QAAQG,EAAO/B,OAAO,EAAG,IAC7C,MAAO,CAAE+B,OAAQA,EAAQ8D,WAAUC,aAGxBC,EAAa,SAAC1M,EAAMmJ,GAC/B,OAAOS,EACL5J,EAAK2B,cACL3B,EAAK4B,WAAa,EAClB5B,EAAK6B,UACL7B,EAAKqF,WACLrF,EAAKsF,aACL6D,IAISK,EAAgB,SAACmD,EAAQlE,GACpC,IAAMmE,EAAkBxM,KAAKkL,OAAQ7C,EAAO,GAAK,EAAK,IAEhDoE,EAAenG,IAAGV,WAAU,SAAAC,GAAC,OAAIA,IAAM0G,KAEvCG,EAAgBC,EACpBF,EAAe,EACfD,EAAkB,EAClBnE,GAKF,OAHY/B,IAAGoG,GACH/G,IAAG6G,IAKXG,EAAoB,SAACC,EAAeC,EAAkBxE,GAC7C,KAATA,IACFuE,GAAgC,GAElC,IAAIF,EAAgC,EAAhBE,GAAqBC,EAAmB,GAC5D,OAAOH,EAAgB,IAAMA,EAAgB,GAAK,GAAKA,EAAgB,I","file":"f1fdceb77adaf660b211aaacf94e50fea3855d52-3838ec11adec3d5875e8.js","sourcesContent":["import requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","/**\r\n * 农历（阴历）万年历\r\n * LunarCalendar\r\n * vervison : v0.1.4\r\n * Github : https://github.com/zzyss86/LunarCalendar\r\n * HomePage : http://www.tuijs.com/\r\n * Author : JasonZhou\r\n * Email : zzyss86@qq.com\r\n */\n(function () {\n  var extend = function extend(o, c) {\n    if (o && c && typeof c == \"object\") {\n      for (var p in c) {\n        o[p] = c[p];\n      }\n    }\n\n    return o;\n  };\n\n  var creatLenArr = function creatLenArr(year, month, len, start) {\n    var arr = [];\n    start = start || 0;\n    if (len < 1) return arr;\n    var k = start;\n\n    for (var i = 0; i < len; i++) {\n      arr.push({\n        year: year,\n        month: month,\n        day: k\n      });\n      k++;\n    }\n\n    return arr;\n  };\n\n  var errorCode = {\n    //错误码列表\n    100: '输入的年份超过了可查询范围，仅支持1891至2100年',\n    101: '参数输入错误，请查阅文档'\n  };\n  var cache = null; //某年相同计算进行cache，以加速计算速度\n\n  var cacheUtil = {\n    //cache管理工具\n    current: '',\n    setCurrent: function setCurrent(year) {\n      if (this.current != year) {\n        this.current = year;\n        this.clear();\n      }\n    },\n    set: function set(key, value) {\n      if (!cache) cache = {};\n      cache[key] = value;\n      return cache[key];\n    },\n    get: function get(key) {\n      if (!cache) cache = {};\n      return cache[key];\n    },\n    clear: function clear() {\n      cache = null;\n    }\n  };\n\n  var formateDayD4 = function formateDayD4(month, day) {\n    month = month + 1;\n    month = month < 10 ? '0' + month : month;\n    day = day < 10 ? '0' + day : day;\n    return 'd' + month + day;\n  };\n\n  var minYear = 1890; //最小年限\n\n  var maxYear = 2100; //最大年限\n\n  var DATA = {\n    heavenlyStems: ['甲', '乙', '丙', '丁', '戊', '己', '庚', '辛', '壬', '癸'],\n    //天干\n    earthlyBranches: ['子', '丑', '寅', '卯', '辰', '巳', '午', '未', '申', '酉', '戌', '亥'],\n    //地支\n    zodiac: ['鼠', '牛', '虎', '兔', '龙', '蛇', '马', '羊', '猴', '鸡', '狗', '猪'],\n    //对应地支十二生肖\n    solarTerm: ['小寒', '大寒', '立春', '雨水', '惊蛰', '春分', '清明', '谷雨', '立夏', '小满', '芒种', '夏至', '小暑', '大暑', '立秋', '处暑', '白露', '秋分', '寒露', '霜降', '立冬', '小雪', '大雪', '冬至'],\n    //二十四节气\n    monthCn: ['正', '二', '三', '四', '五', '六', '七', '八', '九', '十', '十一', '十二'],\n    dateCn: ['初一', '初二', '初三', '初四', '初五', '初六', '初七', '初八', '初九', '初十', '十一', '十二', '十三', '十四', '十五', '十六', '十七', '十八', '十九', '二十', '廿一', '廿二', '廿三', '廿四', '廿五', '廿六', '廿七', '廿八', '廿九', '三十', '卅一']\n  }; //中国节日放假安排，外部设置，0无特殊安排，1工作，2放假\n\n  var worktime = {}; //默认设置2013-2014年放假安排\n\n  worktime.y2013 = {\n    \"d0101\": 2,\n    \"d0102\": 2,\n    \"d0103\": 2,\n    \"d0105\": 1,\n    \"d0106\": 1,\n    \"d0209\": 2,\n    \"d0210\": 2,\n    \"d0211\": 2,\n    \"d0212\": 2,\n    \"d0213\": 2,\n    \"d0214\": 2,\n    \"d0215\": 2,\n    \"d0216\": 1,\n    \"d0217\": 1,\n    \"d0404\": 2,\n    \"d0405\": 2,\n    \"d0406\": 2,\n    \"d0407\": 1,\n    \"d0427\": 1,\n    \"d0428\": 1,\n    \"d0429\": 2,\n    \"d0430\": 2,\n    \"d0501\": 2,\n    \"d0608\": 1,\n    \"d0609\": 1,\n    \"d0610\": 2,\n    \"d0611\": 2,\n    \"d0612\": 2,\n    \"d0919\": 2,\n    \"d0920\": 2,\n    \"d0921\": 2,\n    \"d0922\": 1,\n    \"d0929\": 1,\n    \"d1001\": 2,\n    \"d1002\": 2,\n    \"d1003\": 2,\n    \"d1004\": 2,\n    \"d1005\": 2,\n    \"d1006\": 2,\n    \"d1007\": 2,\n    \"d1012\": 1\n  };\n  worktime.y2014 = {\n    \"d0101\": 2,\n    \"d0126\": 1,\n    \"d0131\": 2,\n    \"d0201\": 2,\n    \"d0202\": 2,\n    \"d0203\": 2,\n    \"d0204\": 2,\n    \"d0205\": 2,\n    \"d0206\": 2,\n    \"d0208\": 1,\n    \"d0405\": 2,\n    \"d0407\": 2,\n    \"d0501\": 2,\n    \"d0502\": 2,\n    \"d0503\": 2,\n    \"d0504\": 1,\n    \"d0602\": 2,\n    \"d0908\": 2,\n    \"d0928\": 1,\n    \"d1001\": 2,\n    \"d1002\": 2,\n    \"d1003\": 2,\n    \"d1004\": 2,\n    \"d1005\": 2,\n    \"d1006\": 2,\n    \"d1007\": 2,\n    \"d1011\": 1\n  }; //公历节日\n\n  var solarFestival = {\n    'd0101': '元旦节',\n    'd0202': '世界湿地日',\n    'd0210': '国际气象节',\n    'd0214': '情人节',\n    'd0301': '国际海豹日',\n    'd0303': '全国爱耳日',\n    'd0305': '学雷锋纪念日',\n    'd0308': '妇女节',\n    'd0312': '植树节 孙中山逝世纪念日',\n    'd0314': '国际警察日',\n    'd0315': '消费者权益日',\n    'd0317': '中国国医节 国际航海日',\n    'd0321': '世界森林日 消除种族歧视国际日 世界儿歌日',\n    'd0322': '世界水日',\n    'd0323': '世界气象日',\n    'd0324': '世界防治结核病日',\n    'd0325': '全国中小学生安全教育日',\n    'd0330': '巴勒斯坦国土日',\n    'd0401': '愚人节 全国爱国卫生运动月(四月) 税收宣传月(四月)',\n    'd0407': '世界卫生日',\n    'd0422': '世界地球日',\n    'd0423': '世界图书和版权日',\n    'd0424': '亚非新闻工作者日',\n    'd0501': '劳动节',\n    'd0504': '青年节',\n    'd0505': '碘缺乏病防治日',\n    'd0508': '世界红十字日',\n    'd0512': '国际护士节',\n    'd0515': '国际家庭日',\n    'd0517': '世界电信日',\n    'd0518': '国际博物馆日',\n    'd0520': '全国学生营养日',\n    'd0522': '国际生物多样性日',\n    'd0523': '国际牛奶日',\n    'd0531': '世界无烟日',\n    'd0601': '国际儿童节',\n    'd0605': '世界环境日',\n    'd0606': '全国爱眼日',\n    'd0617': '防治荒漠化和干旱日',\n    'd0623': '国际奥林匹克日',\n    'd0625': '全国土地日',\n    'd0626': '国际禁毒日',\n    'd0701': '香港回归纪念日 中共诞辰 世界建筑日',\n    'd0702': '国际体育记者日',\n    'd0707': '抗日战争纪念日',\n    'd0711': '世界人口日',\n    'd0730': '非洲妇女日',\n    'd0801': '建军节',\n    'd0808': '中国男子节(爸爸节)',\n    'd0815': '抗日战争胜利纪念',\n    'd0908': '国际扫盲日 国际新闻工作者日',\n    'd0909': '毛泽东逝世纪念',\n    'd0910': '中国教师节',\n    'd0914': '世界清洁地球日',\n    'd0916': '国际臭氧层保护日',\n    'd0918': '九一八事变纪念日',\n    'd0920': '国际爱牙日',\n    'd0927': '世界旅游日',\n    'd0928': '孔子诞辰',\n    'd1001': '国庆节 世界音乐日 国际老人节',\n    'd1002': '国际和平与民主自由斗争日',\n    'd1004': '世界动物日',\n    'd1006': '老人节',\n    'd1008': '全国高血压日 世界视觉日',\n    'd1009': '世界邮政日 万国邮联日',\n    'd1010': '辛亥革命纪念日 世界精神卫生日',\n    'd1013': '世界保健日 国际教师节',\n    'd1014': '世界标准日',\n    'd1015': '国际盲人节(白手杖节)',\n    'd1016': '世界粮食日',\n    'd1017': '世界消除贫困日',\n    'd1022': '世界传统医药日',\n    'd1024': '联合国日 世界发展信息日',\n    'd1031': '世界勤俭日',\n    'd1107': '十月社会主义革命纪念日',\n    'd1108': '中国记者日',\n    'd1109': '全国消防安全宣传教育日',\n    'd1110': '世界青年节',\n    'd1111': '国际科学与和平周(本日所属的一周)',\n    'd1112': '孙中山诞辰纪念日',\n    'd1114': '世界糖尿病日',\n    'd1117': '国际大学生节 世界学生节',\n    'd1121': '世界问候日 世界电视日',\n    'd1129': '国际声援巴勒斯坦人民国际日',\n    'd1201': '世界艾滋病日',\n    'd1203': '世界残疾人日',\n    'd1205': '国际经济和社会发展志愿人员日',\n    'd1208': '国际儿童电视日',\n    'd1209': '世界足球日',\n    'd1210': '世界人权日',\n    'd1212': '西安事变纪念日',\n    'd1213': '南京大屠杀(1937年)纪念日！紧记血泪史！',\n    'd1220': '澳门回归纪念',\n    'd1221': '国际篮球日',\n    'd1224': '平安夜',\n    'd1225': '圣诞节',\n    'd1226': '毛泽东诞辰纪念'\n  }; //农历节日\n\n  var lunarFestival = {\n    'd0101': '春节',\n    'd0115': '元宵节',\n    'd0202': '龙抬头节',\n    'd0323': '妈祖生辰',\n    'd0505': '端午节',\n    'd0707': '七夕情人节',\n    'd0715': '中元节',\n    'd0815': '中秋节',\n    'd0909': '重阳节',\n    'd1015': '下元节',\n    'd1208': '腊八节',\n    'd1223': '小年',\n    'd0100': '除夕'\n  };\n  /**\r\n   * 1890 - 2100 年的农历数据\r\n   * 数据格式：[0,2,9,21936]\r\n   * [闰月所在月，0为没有闰月; *正月初一对应公历月; *正月初一对应公历日; *农历每月的天数的数组（需转换为二进制,得到每月大小，0=小月(29日),1=大月(30日)）;]\r\n  */\n\n  var lunarInfo = [[2, 1, 21, 22184], [0, 2, 9, 21936], [6, 1, 30, 9656], [0, 2, 17, 9584], [0, 2, 6, 21168], [5, 1, 26, 43344], [0, 2, 13, 59728], [0, 2, 2, 27296], [3, 1, 22, 44368], [0, 2, 10, 43856], [8, 1, 30, 19304], [0, 2, 19, 19168], [0, 2, 8, 42352], [5, 1, 29, 21096], [0, 2, 16, 53856], [0, 2, 4, 55632], [4, 1, 25, 27304], [0, 2, 13, 22176], [0, 2, 2, 39632], [2, 1, 22, 19176], [0, 2, 10, 19168], [6, 1, 30, 42200], [0, 2, 18, 42192], [0, 2, 6, 53840], [5, 1, 26, 54568], [0, 2, 14, 46400], [0, 2, 3, 54944], [2, 1, 23, 38608], [0, 2, 11, 38320], [7, 2, 1, 18872], [0, 2, 20, 18800], [0, 2, 8, 42160], [5, 1, 28, 45656], [0, 2, 16, 27216], [0, 2, 5, 27968], [4, 1, 24, 44456], [0, 2, 13, 11104], [0, 2, 2, 38256], [2, 1, 23, 18808], [0, 2, 10, 18800], [6, 1, 30, 25776], [0, 2, 17, 54432], [0, 2, 6, 59984], [5, 1, 26, 27976], [0, 2, 14, 23248], [0, 2, 4, 11104], [3, 1, 24, 37744], [0, 2, 11, 37600], [7, 1, 31, 51560], [0, 2, 19, 51536], [0, 2, 8, 54432], [6, 1, 27, 55888], [0, 2, 15, 46416], [0, 2, 5, 22176], [4, 1, 25, 43736], [0, 2, 13, 9680], [0, 2, 2, 37584], [2, 1, 22, 51544], [0, 2, 10, 43344], [7, 1, 29, 46248], [0, 2, 17, 27808], [0, 2, 6, 46416], [5, 1, 27, 21928], [0, 2, 14, 19872], [0, 2, 3, 42416], [3, 1, 24, 21176], [0, 2, 12, 21168], [8, 1, 31, 43344], [0, 2, 18, 59728], [0, 2, 8, 27296], [6, 1, 28, 44368], [0, 2, 15, 43856], [0, 2, 5, 19296], [4, 1, 25, 42352], [0, 2, 13, 42352], [0, 2, 2, 21088], [3, 1, 21, 59696], [0, 2, 9, 55632], [7, 1, 30, 23208], [0, 2, 17, 22176], [0, 2, 6, 38608], [5, 1, 27, 19176], [0, 2, 15, 19152], [0, 2, 3, 42192], [4, 1, 23, 53864], [0, 2, 11, 53840], [8, 1, 31, 54568], [0, 2, 18, 46400], [0, 2, 7, 46752], [6, 1, 28, 38608], [0, 2, 16, 38320], [0, 2, 5, 18864], [4, 1, 25, 42168], [0, 2, 13, 42160], [10, 2, 2, 45656], [0, 2, 20, 27216], [0, 2, 9, 27968], [6, 1, 29, 44448], [0, 2, 17, 43872], [0, 2, 6, 38256], [5, 1, 27, 18808], [0, 2, 15, 18800], [0, 2, 4, 25776], [3, 1, 23, 27216], [0, 2, 10, 59984], [8, 1, 31, 27432], [0, 2, 19, 23232], [0, 2, 7, 43872], [5, 1, 28, 37736], [0, 2, 16, 37600], [0, 2, 5, 51552], [4, 1, 24, 54440], [0, 2, 12, 54432], [0, 2, 1, 55888], [2, 1, 22, 23208], [0, 2, 9, 22176], [7, 1, 29, 43736], [0, 2, 18, 9680], [0, 2, 7, 37584], [5, 1, 26, 51544], [0, 2, 14, 43344], [0, 2, 3, 46240], [4, 1, 23, 46416], [0, 2, 10, 44368], [9, 1, 31, 21928], [0, 2, 19, 19360], [0, 2, 8, 42416], [6, 1, 28, 21176], [0, 2, 16, 21168], [0, 2, 5, 43312], [4, 1, 25, 29864], [0, 2, 12, 27296], [0, 2, 1, 44368], [2, 1, 22, 19880], [0, 2, 10, 19296], [6, 1, 29, 42352], [0, 2, 17, 42208], [0, 2, 6, 53856], [5, 1, 26, 59696], [0, 2, 13, 54576], [0, 2, 3, 23200], [3, 1, 23, 27472], [0, 2, 11, 38608], [11, 1, 31, 19176], [0, 2, 19, 19152], [0, 2, 8, 42192], [6, 1, 28, 53848], [0, 2, 15, 53840], [0, 2, 4, 54560], [5, 1, 24, 55968], [0, 2, 12, 46496], [0, 2, 1, 22224], [2, 1, 22, 19160], [0, 2, 10, 18864], [7, 1, 30, 42168], [0, 2, 17, 42160], [0, 2, 6, 43600], [5, 1, 26, 46376], [0, 2, 14, 27936], [0, 2, 2, 44448], [3, 1, 23, 21936], [0, 2, 11, 37744], [8, 2, 1, 18808], [0, 2, 19, 18800], [0, 2, 8, 25776], [6, 1, 28, 27216], [0, 2, 15, 59984], [0, 2, 4, 27424], [4, 1, 24, 43872], [0, 2, 12, 43744], [0, 2, 2, 37600], [3, 1, 21, 51568], [0, 2, 9, 51552], [7, 1, 29, 54440], [0, 2, 17, 54432], [0, 2, 5, 55888], [5, 1, 26, 23208], [0, 2, 14, 22176], [0, 2, 3, 42704], [4, 1, 23, 21224], [0, 2, 11, 21200], [8, 1, 31, 43352], [0, 2, 19, 43344], [0, 2, 7, 46240], [6, 1, 27, 46416], [0, 2, 15, 44368], [0, 2, 5, 21920], [4, 1, 24, 42448], [0, 2, 12, 42416], [0, 2, 2, 21168], [3, 1, 22, 43320], [0, 2, 9, 26928], [7, 1, 29, 29336], [0, 2, 17, 27296], [0, 2, 6, 44368], [5, 1, 26, 19880], [0, 2, 14, 19296], [0, 2, 3, 42352], [4, 1, 24, 21104], [0, 2, 10, 53856], [8, 1, 30, 59696], [0, 2, 18, 54560], [0, 2, 7, 55968], [6, 1, 27, 27472], [0, 2, 15, 22224], [0, 2, 5, 19168], [4, 1, 25, 42216], [0, 2, 12, 42192], [0, 2, 1, 53584], [2, 1, 21, 55592], [0, 2, 9, 54560]];\n  /**\r\n   * 二十四节气数据，节气点时间（单位是分钟）\r\n   * 从0小寒起算\r\n   */\n\n  var termInfo = [0, 21208, 42467, 63836, 85337, 107014, 128867, 150921, 173149, 195551, 218072, 240693, 263343, 285989, 308563, 331033, 353350, 375494, 397447, 419210, 440795, 462224, 483532, 504758];\n  /**\r\n   * 判断农历年闰月数\r\n   * @param {Number} year 农历年\r\n   * return 闰月数 （月份从1开始）\r\n   */\n\n  function getLunarLeapYear(year) {\n    var yearData = lunarInfo[year - minYear];\n    return yearData[0];\n  }\n\n  ;\n  /**\r\n   * 获取农历年份一年的每月的天数及一年的总天数\r\n   * @param {Number} year 农历年\r\n   */\n\n  function getLunarYearDays(year) {\n    var yearData = lunarInfo[year - minYear];\n    var leapMonth = yearData[0]; //闰月\n\n    var monthData = yearData[3].toString(2);\n    var monthDataArr = monthData.split(''); //还原数据至16位,少于16位的在前面插入0（二进制存储时前面的0被忽略）\n\n    for (var i = 0; i < 16 - monthDataArr.length; i++) {\n      monthDataArr.unshift(0);\n    }\n\n    var len = leapMonth ? 13 : 12; //该年有几个月\n\n    var yearDays = 0;\n    var monthDays = [];\n\n    for (var i = 0; i < len; i++) {\n      if (monthDataArr[i] == 0) {\n        yearDays += 29;\n        monthDays.push(29);\n      } else {\n        yearDays += 30;\n        monthDays.push(30);\n      }\n    }\n\n    return {\n      yearDays: yearDays,\n      monthDays: monthDays\n    };\n  }\n\n  ;\n  /**\r\n   * 通过间隔天数查找农历日期\r\n   * @param {Number} year,between 农历年，间隔天数\r\n   */\n\n  function getLunarDateByBetween(year, between) {\n    var lunarYearDays = getLunarYearDays(year);\n    var end = between > 0 ? between : lunarYearDays.yearDays - Math.abs(between);\n    var monthDays = lunarYearDays.monthDays;\n    var tempDays = 0;\n    var month = 0;\n\n    for (var i = 0; i < monthDays.length; i++) {\n      tempDays += monthDays[i];\n\n      if (tempDays > end) {\n        month = i;\n        tempDays = tempDays - monthDays[i];\n        break;\n      }\n    }\n\n    return [year, month, end - tempDays + 1];\n  }\n\n  ;\n  /**\r\n   * 根据距离正月初一的天数计算农历日期\r\n   * @param {Number} year 公历年，月，日\r\n   */\n\n  function getLunarByBetween(year, month, day) {\n    var yearData = lunarInfo[year - minYear];\n    var zenMonth = yearData[1];\n    var zenDay = yearData[2];\n    var between = getDaysBetweenSolar(year, zenMonth - 1, zenDay, year, month, day);\n\n    if (between == 0) {\n      //正月初一\n      return [year, 0, 1];\n    } else {\n      var lunarYear = between > 0 ? year : year - 1;\n      return getLunarDateByBetween(lunarYear, between);\n    }\n  }\n\n  ;\n  /**\r\n   * 两个公历日期之间的天数\r\n   */\n\n  function getDaysBetweenSolar(year, month, day, year1, month1, day1) {\n    var date = new Date(year, month, day).getTime();\n    var date1 = new Date(year1, month1, day1).getTime();\n    return (date1 - date) / 86400000;\n  }\n\n  ;\n  /**\r\n   * 计算农历日期离正月初一有多少天\r\n   * @param {Number} year,month,day 农年，月(0-12，有闰月)，日\r\n   */\n\n  function getDaysBetweenZheng(year, month, day) {\n    var lunarYearDays = getLunarYearDays(year);\n    var monthDays = lunarYearDays.monthDays;\n    var days = 0;\n\n    for (var i = 0; i < monthDays.length; i++) {\n      if (i < month) {\n        days += monthDays[i];\n      } else {\n        break;\n      }\n    }\n\n    ;\n    return days + day - 1;\n  }\n\n  ;\n  /**\r\n   * 某年的第n个节气为几日\r\n   * 31556925974.7为地球公转周期，是毫秒\r\n   * 1890年的正小寒点：01-05 16:02:31，1890年为基准点\r\n   * @param {Number} y 公历年\r\n   * @param {Number} n 第几个节气，从0小寒起算\r\n   * 由于农历24节气交节时刻采用近似算法，可能存在少量误差(30分钟内)\r\n   */\n\n  function getTerm(y, n) {\n    var offDate = new Date(31556925974.7 * (y - 1890) + termInfo[n] * 60000 + Date.UTC(1890, 0, 5, 16, 2, 31));\n    return offDate.getUTCDate();\n  }\n\n  ;\n  /**\r\n   * 获取公历年一年的二十四节气\r\n   * 返回key:日期，value:节气中文名\r\n   */\n\n  function getYearTerm(year) {\n    var res = {};\n    var month = 0;\n\n    for (var i = 0; i < 24; i++) {\n      var day = getTerm(year, i);\n      if (i % 2 == 0) month++;\n      res[formateDayD4(month - 1, day)] = DATA.solarTerm[i];\n    }\n\n    return res;\n  }\n\n  ;\n  /**\r\n   * 获取生肖\r\n   * @param {Number} year 干支所在年（默认以立春前的公历年作为基数）\r\n   */\n\n  function getYearZodiac(year) {\n    var num = year - 1890 + 25; //参考干支纪年的计算，生肖对应地支\n\n    return DATA.zodiac[num % 12];\n  }\n\n  ;\n  /**\r\n   * 计算天干地支\r\n   * @param {Number} num 60进制中的位置(把60个天干地支，当成一个60进制的数)\r\n   */\n\n  function cyclical(num) {\n    return DATA.heavenlyStems[num % 10] + DATA.earthlyBranches[num % 12];\n  }\n  /**\r\n   * 获取干支纪年\r\n   * @param {Number} year 干支所在年\r\n   * @param {Number} offset 偏移量，默认为0，便于查询一个年跨两个干支纪年（以立春为分界线）\r\n   */\n\n\n  function getLunarYearName(year, offset) {\n    offset = offset || 0; //1890年1月小寒（小寒一般是1月5或6日）以前为己丑年，在60进制中排25\n\n    return cyclical(year - 1890 + 25 + offset);\n  }\n\n  ;\n  /**\r\n   * 获取干支纪月\r\n   * @param {Number} year,month 公历年，干支所在月\r\n   * @param {Number} offset 偏移量，默认为0，便于查询一个月跨两个干支纪月（有立春的2月）\r\n   */\n\n  function getLunarMonthName(year, month, offset) {\n    offset = offset || 0; //1890年1月小寒以前为丙子月，在60进制中排12\n\n    return cyclical((year - 1890) * 12 + month + 12 + offset);\n  }\n\n  ;\n  /**\r\n   * 获取干支纪日\r\n   * @param {Number} year,month,day 公历年，月，日\r\n   */\n\n  function getLunarDayName(year, month, day) {\n    //当日与1890/1/1 相差天数\n    //1890/1/1与 1970/1/1 相差29219日, 1890/1/1 日柱为壬午日(60进制18)\n    var dayCyclical = Date.UTC(year, month, day) / 86400000 + 29219 + 18;\n    return cyclical(dayCyclical);\n  }\n\n  ;\n  /**\r\n   * 获取公历月份的天数\r\n   * @param {Number} year 公历年\r\n   * @param {Number} month 公历月\r\n   */\n\n  function getSolarMonthDays(year, month) {\n    var monthDays = [31, isLeapYear(year) ? 29 : 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    return monthDays[month];\n  }\n\n  ;\n  /**\r\n   * 判断公历年是否是闰年\r\n   * @param {Number} year 公历年\r\n   */\n\n  function isLeapYear(year) {\n    return year % 4 == 0 && year % 100 != 0 || year % 400 == 0;\n  }\n\n  ;\n  /*\r\n   * 统一日期输入参数（输入月份从1开始，内部月份统一从0开始）\r\n   */\n\n  function formateDate(year, month, day, _minYear) {\n    var argsLen = arguments.length;\n    var now = new Date();\n    year = argsLen ? parseInt(year, 10) : now.getFullYear();\n    month = argsLen ? parseInt(month - 1, 10) : now.getMonth();\n    day = argsLen ? parseInt(day, 10) || now.getDate() : now.getDate();\n    if (year < (_minYear ? _minYear : minYear + 1) || year > maxYear) return {\n      error: 100,\n      msg: errorCode[100]\n    };\n    return {\n      year: year,\n      month: month,\n      day: day\n    };\n  }\n\n  ;\n  /**\r\n   * 将农历转换为公历\r\n   * @param {Number} year,month,day 农历年，月(1-13，有闰月)，日\r\n   */\n\n  function lunarToSolar(_year, _month, _day) {\n    var inputDate = formateDate(_year, _month, _day);\n    if (inputDate.error) return inputDate;\n    var year = inputDate.year;\n    var month = inputDate.month;\n    var day = inputDate.day;\n    var between = getDaysBetweenZheng(year, month, day); //离正月初一的天数\n\n    var yearData = lunarInfo[year - minYear];\n    var zenMonth = yearData[1];\n    var zenDay = yearData[2];\n    var offDate = new Date(year, zenMonth - 1, zenDay).getTime() + between * 86400000;\n    offDate = new Date(offDate);\n    return {\n      year: offDate.getFullYear(),\n      month: offDate.getMonth() + 1,\n      day: offDate.getDate()\n    };\n  }\n\n  ;\n  /**\r\n   * 将公历转换为农历\r\n   * @param {Number} year,month,day 公历年，月，日\r\n   */\n\n  function solarToLunar(_year, _month, _day) {\n    var inputDate = formateDate(_year, _month, _day, minYear);\n    if (inputDate.error) return inputDate;\n    var year = inputDate.year;\n    var month = inputDate.month;\n    var day = inputDate.day;\n    cacheUtil.setCurrent(year); //立春日期\n\n    var term2 = cacheUtil.get('term2') ? cacheUtil.get('term2') : cacheUtil.set('term2', getTerm(year, 2)); //二十四节气\n\n    var termList = cacheUtil.get('termList') ? cacheUtil.get('termList') : cacheUtil.set('termList', getYearTerm(year));\n    var firstTerm = getTerm(year, month * 2); //某月第一个节气开始日期\n\n    var GanZhiYear = month > 1 || month == 1 && day >= term2 ? year + 1 : year; //干支所在年份\n\n    var GanZhiMonth = day >= firstTerm ? month + 1 : month; //干支所在月份（以节气为界）\n\n    var lunarDate = getLunarByBetween(year, month, day);\n    var lunarLeapMonth = getLunarLeapYear(lunarDate[0]);\n    var lunarMonthName = '';\n\n    if (lunarLeapMonth > 0 && lunarLeapMonth == lunarDate[1]) {\n      lunarMonthName = '闰' + DATA.monthCn[lunarDate[1] - 1] + '月';\n    } else if (lunarLeapMonth > 0 && lunarDate[1] > lunarLeapMonth) {\n      lunarMonthName = DATA.monthCn[lunarDate[1] - 1] + '月';\n    } else {\n      lunarMonthName = DATA.monthCn[lunarDate[1]] + '月';\n    } //农历节日判断\n\n\n    var lunarFtv = '';\n    var lunarMonthDays = getLunarYearDays(lunarDate[0]).monthDays; //除夕\n\n    if (lunarDate[1] == lunarMonthDays.length - 1 && lunarDate[2] == lunarMonthDays[lunarMonthDays.length - 1]) {\n      lunarFtv = lunarFestival['d0100'];\n    } else if (lunarLeapMonth > 0 && lunarDate[1] > lunarLeapMonth) {\n      lunarFtv = lunarFestival[formateDayD4(lunarDate[1] - 1, lunarDate[2])];\n    } else {\n      lunarFtv = lunarFestival[formateDayD4(lunarDate[1], lunarDate[2])];\n    }\n\n    var res = {\n      zodiac: getYearZodiac(GanZhiYear),\n      GanZhiYear: getLunarYearName(GanZhiYear),\n      GanZhiMonth: getLunarMonthName(year, GanZhiMonth),\n      GanZhiDay: getLunarDayName(year, month, day),\n      //放假安排：0无特殊安排，1工作，2放假\n      worktime: worktime['y' + year] && worktime['y' + year][formateDayD4(month, day)] ? worktime['y' + year][formateDayD4(month, day)] : 0,\n      term: termList[formateDayD4(month, day)],\n      lunarYear: lunarDate[0],\n      lunarMonth: lunarDate[1] + 1,\n      lunarDay: lunarDate[2],\n      lunarMonthName: lunarMonthName,\n      lunarDayName: DATA.dateCn[lunarDate[2] - 1],\n      lunarLeapMonth: lunarLeapMonth,\n      solarFestival: solarFestival[formateDayD4(month, day)],\n      lunarFestival: lunarFtv\n    };\n    return res;\n  }\n\n  ;\n  /**\r\n   * 获取指定公历月份的农历数据\r\n   * return res{Object}\r\n   * @param {Number} year,month 公历年，月\r\n   * @param {Boolean} fill 是否用上下月数据补齐首尾空缺，首例数据从周日开始\r\n   */\n\n  function calendar(_year, _month, fill) {\n    var inputDate = formateDate(_year, _month);\n    if (inputDate.error) return inputDate;\n    var year = inputDate.year;\n    var month = inputDate.month;\n    var calendarData = solarCalendar(year, month + 1, fill);\n\n    for (var i = 0; i < calendarData.monthData.length; i++) {\n      var cData = calendarData.monthData[i];\n      var lunarData = solarToLunar(cData.year, cData.month, cData.day);\n      extend(calendarData.monthData[i], lunarData);\n    }\n\n    return calendarData;\n  }\n\n  ;\n  /**\r\n   * 公历某月日历\r\n   * return res{Object}\r\n   * @param {Number} year,month 公历年，月\r\n   * @param {Boolean} fill 是否用上下月数据补齐首尾空缺，首例数据从周日开始 (7*6阵列)\r\n   */\n\n  function solarCalendar(_year, _month, fill) {\n    var inputDate = formateDate(_year, _month);\n    if (inputDate.error) return inputDate;\n    var year = inputDate.year;\n    var month = inputDate.month;\n    var firstDate = new Date(year, month, 1);\n    var preMonthDays, preMonthData, nextMonthData;\n    var res = {\n      firstDay: firstDate.getDay(),\n      //该月1号星期几\n      monthDays: getSolarMonthDays(year, month),\n      //该月天数\n      monthData: []\n    };\n    res.monthData = creatLenArr(year, month + 1, res.monthDays, 1);\n\n    if (fill) {\n      if (res.firstDay > 0) {\n        //前补\n        var preYear = month - 1 < 0 ? year - 1 : year;\n        var preMonth = month - 1 < 0 ? 11 : month - 1;\n        preMonthDays = getSolarMonthDays(preYear, preMonth);\n        preMonthData = creatLenArr(preYear, preMonth + 1, res.firstDay, preMonthDays - res.firstDay + 1);\n        res.monthData = preMonthData.concat(res.monthData);\n      }\n\n      if (7 * 6 - res.monthData.length != 0) {\n        //后补\n        var nextYear = month + 1 > 11 ? year + 1 : year;\n        var nextMonth = month + 1 > 11 ? 0 : month + 1;\n        var fillLen = 7 * 6 - res.monthData.length;\n        nextMonthData = creatLenArr(nextYear, nextMonth + 1, fillLen, 1);\n        res.monthData = res.monthData.concat(nextMonthData);\n      }\n    }\n\n    return res;\n  }\n\n  ;\n  /**\r\n   * 设置放假安排【对外暴露接口】\r\n   * @param {Object} workData\r\n   */\n\n  function setWorktime(workData) {\n    extend(worktime, workData);\n  }\n\n  ;\n  var LunarCalendar = {\n    solarToLunar: solarToLunar,\n    lunarToSolar: lunarToSolar,\n    calendar: calendar,\n    solarCalendar: solarCalendar,\n    setWorktime: setWorktime,\n    getSolarMonthDays: getSolarMonthDays\n  };\n\n  if (typeof define === 'function') {\n    define(function () {\n      return LunarCalendar;\n    });\n  } else if (typeof exports === 'object') {\n    module.exports = LunarCalendar;\n  } else {\n    window.LunarCalendar = LunarCalendar;\n  }\n\n  ;\n})();","/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\nexport default function getTimezoneOffsetInMilliseconds(date) {\n  var utcDate = new Date(Date.UTC(date.getFullYear(), date.getMonth(), date.getDate(), date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds()));\n  utcDate.setUTCFullYear(date.getFullYear());\n  return date.getTime() - utcDate.getTime();\n}","import DongGong from \"./DongGong.json\"\nimport {\n  ALAMAC_DAY_HOUR,\n  EB,\n  TWELVE_OFFICER,\n  TWENTY_EIGHT_CONSTELLATION,\n  SIXTY_PILLAR,\n  HS,\n} from \"../constants\"\nimport { differenceInCalendarDays } from \"date-fns\"\n\nexport const get12Officer = (monthBranch, dayBranch) => {\n  return TWELVE_OFFICER[\n    determineOfficerIndex(\n      EB.findIndex(e => e === monthBranch),\n      EB.findIndex(e => e === dayBranch)\n    )\n  ]\n}\n\nexport const getDongGongAdvice = (monthBranch, dayBranch) => {\n  const officerOrder = EB.slice(EB.indexOf(monthBranch)).concat(\n    EB.slice(0, EB.indexOf(monthBranch))\n  )\n  const officerIndex = determineOfficerIndex(\n    officerOrder.indexOf(monthBranch),\n    officerOrder.indexOf(dayBranch)\n  )\n  return {\n    ...DongGong[getDongGongAdviceIndex(monthBranch, officerIndex)],\n    officer: TWELVE_OFFICER[officerIndex],\n  }\n}\n\nexport const getDongGongAdviceIndex = (monthBranch, officerIndex) => {\n  const monthOrder = EB.slice(2).concat(EB.slice(0, 2))\n  return monthOrder.indexOf(monthBranch) * 12 + officerIndex\n}\n\nexport const determineOfficerIndex = (monthBranchNumber, dayBranchNumber) => {\n  var distance = dayBranchNumber - monthBranchNumber\n  if (distance < 0) {\n    distance = 12 + distance\n  }\n  return distance\n}\n\nexport const isYearBreaker = (yearBranch, dayBranch) => {\n  return isClash(dayBranch, yearBranch)\n}\n\nexport const isMonthBreaker = (monthBranch, dayBranch) => {\n  return isClash(dayBranch, monthBranch)\n}\n\nexport const isThreeKilling = (yearBranch, dayBranch) => {\n  const lookup = {\n    申子辰: \"寅午戌\",\n    亥卯未: \"巳酉丑\",\n    寅午戌: \"申子辰\",\n    巳酉丑: \"亥卯未\",\n  }\n  const threeKillingBranches = Object.keys(lookup).find(\n    e => lookup[e].indexOf(yearBranch) > -1\n  )\n  return threeKillingBranches.indexOf(dayBranch) > -1\n}\n\nexport const isFourSeperatingDay = (month, date) => {\n  return !![\"320\", \"620\", \"920\", \"1221\"].find(e => e === `${month}${date}`)\n}\n\nexport const isFourExtinctDay = (month, date) => {\n  return !![\"23\", \"55\", \"88\", \"117\"].find(e => e === `${month}${date}`)\n}\n\nexport const isClash = (branch1, branch2) => {\n  const b1 = EB.indexOf(branch1)\n  const b2 = EB.indexOf(branch2)\n  return Math.abs(b1 - b2) === 6\n}\n\nexport const getConstellation = date => {\n  const diff = differenceInCalendarDays(date, new Date(2007, 1, 1))\n  return TWENTY_EIGHT_CONSTELLATION[diff % 28]\n}\n\nexport const isNoWealthDay = (yearPillar, dayPillar) => {\n  const lookup = [\"寅\", \"卯\", \"巳\", \"午\", \"巳\", \"午\", \"申\", \"酉\", \"亥\", \"子\"]\n  const emptyBranch = getEmptinessBranch(yearPillar)\n  const emptyStem = lookup.reduce((a, n, i) => {\n    if (emptyBranch.includes(n)) {\n      a.push(HS[i])\n    }\n    return a\n  }, [])\n\n  const distanceToGui = 9 - HS.findIndex(e => e === yearPillar.substr(0, 1))\n  const pillarIndex =\n    SIXTY_PILLAR.findIndex(e => e === yearPillar) + distanceToGui\n\n  return SIXTY_PILLAR.slice(pillarIndex - 9, pillarIndex + distanceToGui)\n    .filter(e => emptyStem.includes(e.substr(0, 1)))\n    .includes(dayPillar)\n}\n\nexport const getEmptinessBranch = pillar => {\n  const iterate = [...SIXTY_PILLAR, ...SIXTY_PILLAR]\n  const distanceToGui = 9 - HS.findIndex(e => e === pillar.substr(0, 1))\n  const pillarIndex = iterate.findIndex(e => e === pillar) + distanceToGui\n  const pillar1 = iterate[pillarIndex + 1]\n  const pillar2 = iterate[pillarIndex + 2]\n  return [pillar1.substr(1, 1), pillar2.substr(1, 1)]\n}\n\nexport const getAlamacHourStar = dayPillar => {\n  return ALAMAC_DAY_HOUR[dayPillar]\n}\n\nexport const getHorseStar = branch => {\n  const lookup = {\n    申子辰: \"寅\",\n    亥卯未: \"巳\",\n    寅午戌: \"申\",\n    巳酉丑: \"亥\",\n  }\n  const key = Object.keys(lookup).find(k => {\n    return k.indexOf(branch) > -1\n  })\n  return lookup[key]\n}\n","import toDate from \"../toDate/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import getTimezoneOffsetInMilliseconds from \"../_lib/getTimezoneOffsetInMilliseconds/index.js\";\nimport startOfDay from \"../startOfDay/index.js\";\nimport requiredArgs from \"../_lib/requiredArgs/index.js\";\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * const result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * const result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\n\nexport default function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfDayLeft = startOfDay(dirtyDateLeft);\n  var startOfDayRight = startOfDay(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}","export const isEven = number => number % 2 === 0\n","import LunarCalendar from \"lunar-calendar\"\nimport { parseISO, differenceInCalendarDays } from \"date-fns\"\nimport { isEven } from \"../util/number\"\nimport { HS, EB, SIXTY_PILLAR, SOLAR_TERM } from \"../constants/\"\nimport SolarTerm from \"./SolarTerm.json\"\nimport ClassicalStars from \"./ClassicalStars.json\"\nimport { getEmptinessBranch } from \"../DateSelection\"\nimport { HIDDEN_STEM } from \"./constants\"\nimport NaYin from \"./NaYin.json\"\n\nexport const getHiddenStem = branch => HIDDEN_STEM[branch]\n\nexport const getSolarTerm = (year, month, day, hour, min) => {\n  const paddedMonth = `${month}`.padStart(2, \"0\")\n  const paddedDay = `${day}`.padStart(2, \"0\")\n  const h = `${hour}`.padStart(2, \"0\")\n  const m = `${min}`.padStart(2, \"0\")\n\n  const yearMonthString = `${year}${paddedMonth}${paddedDay}T${h}:${m}`\n\n  const solarTerm = SolarTerm.slice()\n    .reverse()\n    .find(e => yearMonthString > e.d)\n  const NextSolarTerm = SolarTerm.find(e => e.d > solarTerm.d)\n\n  const principalSolarTerms = SOLAR_TERM.filter((e, i) => i % 2 === 0)\n  const principalTermForDate = SolarTerm.slice()\n    .reverse()\n    .find(e => yearMonthString > e.d && principalSolarTerms.includes(e.s))\n  const ptIndex = principalSolarTerms.findIndex(\n    e => e === principalTermForDate.s\n  )\n  const referencePT = principalSolarTerms\n    .slice(ptIndex)\n    .concat(principalSolarTerms.slice(0, ptIndex))\n  const nextPrincipalTermForDate = SolarTerm.find(\n    e => yearMonthString < e.d && e.s === referencePT[1]\n  )\n\n  return {\n    solarTerm: solarTerm.s,\n    transitionDay: solarTerm.d.substr(0, 8) === yearMonthString.substr(0, 8),\n    dayToNextTerm:\n      differenceInCalendarDays(\n        parseISO(NextSolarTerm.d),\n        parseISO(yearMonthString)\n      ) + 1,\n    dayToNextPrincipalTerm: differenceInCalendarDays(\n      parseISO(nextPrincipalTermForDate.d),\n      parseISO(yearMonthString)\n    ),\n    dayToPreviousPrincipalTerm: differenceInCalendarDays(\n      parseISO(yearMonthString),\n      parseISO(principalTermForDate.d)\n    ),\n  }\n}\n\nexport const getPillarSequence = (pillar, length, direction = true) => {\n  const concatPillar = [...Array(Math.ceil(length / 60 + 1))].reduce((a, n) => {\n    return [...a, ...SIXTY_PILLAR]\n  }, [])\n  const useConcatPillar = direction\n    ? concatPillar\n    : concatPillar.slice().reverse()\n  const pillarIndex = useConcatPillar.indexOf(pillar)\n  return useConcatPillar.slice(pillarIndex, pillarIndex + length)\n}\n\nconst deriveStars = (year, month, day, hour) => {\n  const dayBranch = day.ganzhi.substr(1, 1)\n  const dayStem = day.ganzhi.substr(0, 1)\n  return {\n    classical: {\n      ...ClassicalStars[dayBranch],\n      ...ClassicalStars[dayStem],\n      空亡: getEmptinessBranch(day.ganzhi).join(\"\"),\n    },\n    blindman: {\n      空亡: getEmptinessBranch(day.ganzhi).join(\"\"),\n    },\n  }\n}\n\nconst _gregorianToBazi = (year, month, day, hour = 12, min = 0, gender) => {\n  const monthIndex = month - 1\n  const date = new Date(year, monthIndex, day)\n  const result = LunarCalendar.calendar(\n    date.getFullYear(),\n    date.getMonth() + 1,\n    date.getDate()\n  )\n  const found = result.monthData.findIndex(\n    e =>\n      e.year === Number(year) &&\n      e.month === Number(month) &&\n      e.day === Number(day)\n  )\n  const { GanZhiYear, GanZhiMonth, GanZhiDay } = result.monthData[found]\n  const GanZhiHour = calculateHour(GanZhiDay.substr(0, 1), hour)\n  return (\n    found > -1 && {\n      lunarMonthNumber: result.monthData[found].lunarMonth - 1,\n      ...result.monthData[found],\n      GanZhiYear,\n      GanZhiMonth,\n      GanZhiDay,\n      GanZhiHour,\n    }\n  )\n}\n\nexport const dateObjectToBazi = (date, gender) => {\n  const year = date.getFullYear()\n  const month = date.getMonth() + 1\n  const dateOfMonth = date.getDate()\n  const hour = date.getHours()\n  const min = date.getMinutes()\n  return gregorianToBazi(year, month, dateOfMonth, hour, min, gender)\n}\n\nexport const gregorianToBazi = (year, month, day, hour, min = 0, gender) => {\n  const westernAge = new Date(Date.now()).getFullYear() - year\n  const bazi = _gregorianToBazi(year, month, day, hour, min, gender)\n  if (bazi) {\n    let { GanZhiYear, GanZhiMonth, GanZhiDay, GanZhiHour } = bazi\n    const termInfo = getSolarTerm(year, month, day, hour, min)\n    const forward =\n      (gender === \"M\" && isEven(SIXTY_PILLAR.indexOf(GanZhiYear))) ||\n      (gender === \"F\" && !isEven(SIXTY_PILLAR.indexOf(GanZhiYear)))\n    const startAgeQuotient = forward\n      ? Math.floor(termInfo.dayToNextPrincipalTerm / 3)\n      : Math.floor(termInfo.dayToPreviousPrincipalTerm / 3)\n    const remainder = forward\n      ? termInfo.dayToNextPrincipalTerm % 3\n      : termInfo.dayToPreviousPrincipalTerm % 3\n    const startWesternAge =\n      remainder === 2 ? startAgeQuotient + 1 : startAgeQuotient\n\n    const tenYearCycle = getPillarSequence(GanZhiMonth, 11, forward).slice(\n      1,\n      10\n    )\n    const hundredYear = [\"小寒\", \"大寒\"].includes(termInfo.solarTerm)\n      ? getPillarSequence(GanZhiYear, 101).slice(1, 100)\n      : getPillarSequence(GanZhiYear, 100)\n    const monthBazi = _gregorianToBazi(year, month, 16)\n    const monthCycle = getPillarSequence(monthBazi.GanZhiMonth, 1200)\n\n    GanZhiYear = convertGanZhi(GanZhiYear)\n    GanZhiMonth = convertGanZhi(GanZhiMonth)\n    GanZhiDay = convertGanZhi(GanZhiDay)\n    GanZhiHour = convertGanZhi(GanZhiHour)\n\n    const activeLuckPillarIndex =\n      westernAge >= startWesternAge\n        ? Math.floor((westernAge - startWesternAge) / 10)\n        : -1\n\n    return {\n      westernAge,\n      startWesternAge,\n      currentYearPillar: hundredYear[westernAge],\n      currentLuckPillar: tenYearCycle[activeLuckPillarIndex],\n      westernYear: year,\n      westernMonth: month,\n      westernDay: day,\n      ...termInfo,\n      ...bazi,\n      GanZhiYear,\n      GanZhiMonth,\n      GanZhiDay,\n      GanZhiHour,\n      startAge: Math.round(Math.abs(startWesternAge)),\n      tenYearCycle: tenYearCycle,\n      hundredYear: hundredYear.map((e, i) => ({\n        pillar: e,\n        year: year + i,\n      })),\n      monthCycle,\n      stars: deriveStars(GanZhiYear, GanZhiMonth, GanZhiDay, GanZhiHour),\n      dayNayin: NaYin[GanZhiDay.ganzhi],\n    }\n  } else {\n    return \"\"\n  }\n}\n\nconst convertGanZhi = ganzhi => {\n  const ganIndex = HS.indexOf(ganzhi.substr(0, 1))\n  const zhiIndex = EB.indexOf(ganzhi.substr(1, 1))\n  return { ganzhi: ganzhi, ganIndex, zhiIndex }\n}\n\nexport const dateToBazi = (date, gender) => {\n  return gregorianToBazi(\n    date.getFullYear(),\n    date.getMonth() + 1,\n    date.getDate(),\n    date.getHours(),\n    date.getMinutes(),\n    gender\n  )\n}\n\nexport const calculateHour = (dayGan, hour) => {\n  const hourBranchIndex = Math.floor(((hour + 1) / 2) % 12)\n\n  const dayStemIndex = HS.findIndex(e => e === dayGan)\n\n  const hourStemIndex = calculateHourStem(\n    dayStemIndex + 1,\n    hourBranchIndex + 1,\n    hour\n  )\n  const gan = HS[hourStemIndex]\n  const zhi = EB[hourBranchIndex]\n\n  return gan + zhi\n}\n\nconst calculateHourStem = (dayStemNumber, hourBranchNumber, hour) => {\n  if (hour === 23) {\n    dayStemNumber = dayStemNumber + 1\n  }\n  var hourStemIndex = dayStemNumber * 2 + (hourBranchNumber - 2)\n  return hourStemIndex > 10 ? (hourStemIndex - 1) % 10 : hourStemIndex - 1\n}\n"],"sourceRoot":""}