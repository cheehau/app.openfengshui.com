{"version":3,"sources":["webpack:///./src/containers/Ad.js","webpack:///./src/containers/IChing/utils.ts","webpack:///./src/components/Bazi/index.js","webpack:///./src/cm-lib/IChing/index.js","webpack:///./src/containers/IChing/Hexline.css.tsx","webpack:///./src/containers/IChing/HexLine.tsx","webpack:///./src/containers/IChing/Hex.tsx","webpack:///./src/modules/fengshui/iching/index.js","webpack:///./src/components/BoxButton/index.js","webpack:///./src/components/Pillar/index.js","webpack:///./src/containers/Bazi/BaziPillar.js"],"names":["Ad","client","slot","Coin","Line","Home","inputDate","hideOtherInformation","onBazi","t","plumNumber","useTranslation","qs","getQueryString","dateObject","useState","Date","pillars","setPillars","parseInt","g","gender","setGender","bazi","dateObjectToBazi","useEffect","bz","header","ganzhi","GanZhiHour","custom","EB","indexOf","substr","GanZhiDay","lunarDay","GanZhiMonth","lunarMonthNumber","GanZhiYear","map","e","BaziPillar","hiddenStems","luckHeader","tenYearCycle","i","startWesternAge","hundredYear","chunk","year","pillar","BoxButton","activeIndex","onClick","buttons","label","Pillar","list","Accordion","AccordionPanel","Object","keys","stars","classical","k","elementRelationship","first","second","lookup","firstIndex","findIndex","distance","slice","concat","getHex","binary","searchHexagram","split","join","getSixAnimal","dayMaster","index","甲","乙","丙","丁","戊","己","庚","辛","壬","癸","SIX_ANIMALS","changeLine","hexagram","lineIndex","replace","replaceAt","key","value","Hexagram","find","h","word","replacement","length","Tails","Heads","Trigrams","Straight","Broken","TRIGRAM_LOOKUP_ORDER","Chen","Ken","Sun","Li","Tui","HEXAGRAM_LOOKUP_TABLE","HEXAGRAM_NAMES","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","Trigram","lines","coinToss","Math","round","random","getLine","this","getKey","trigramName","trigramLookup","changing","some","line","BrokenPlus","StraightPlus","normalizeLine","changeLines","normalizeLines","normalizedLines","lowerTrigram","upperTrigram","hexagramNumber","hexagramName","getLinesAscending","getLinesDescending","reverse","getChangingHex","BrokenContainer","styled","div","BrokenSegment","props","mend","change","left","SegmentSymbol","right","branch","host","guest","kin","shen","margin","HexLine","Hex","data","sixGod","Box","align","justify","TC","inverseIndex","relation","Branch","queryString","require","binToHexagram","lowerLines","upperLines","queryDate","parseStringDate","search","hex","setHex","date","yBranch","dStem","hBranch","sumOfYMD","sumOfYMDH","changingLine","upper","lower","mainHexagram","changeHexagram","changeHexagramObject","mainHexagramObject","getTrigram","ii","dateToBazi","EARLY_HEAVEN_TRIGRAM","ee","element","EBElement","animals","mainHex","Binary","changeHex","console","log","background","assign","stringify","format","DATETIME_FORMAT","Bazi","direction","alignContent","fill","pad","color","wrap","gap","StandardBox","children","PillarGrid","getColor","size","textAlign","HIDDEN_STEMS"],"mappings":"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","file":"component---src-modules-fengshui-iching-index-js-1933ffbdd0955da2b7a1.js","sourcesContent":["import React from \"react\"\nimport { Adsense } from \"@ctrl/react-adsense\"\n\nconst Ad = () => <Adsense client=\"ca-pub-6343289823091285\" slot=\"5114483936\" />\n\nexport default Ad\n","/*\nTODO:\n1. organize/break into files\n2. hand drawn lines\n3. Animations on line and draw\n4. Click to re-cast\n7. SEO\n*/\n\nenum Coin {\n  Tails = 0,\n  Heads = 1,\n}\n\nexport enum Line {\n  BrokenPlus = Coin.Tails + Coin.Tails + Coin.Tails, // 0\n  Straight = Coin.Heads + Coin.Tails + Coin.Tails, // 1\n  Broken = Coin.Heads + Coin.Heads + Coin.Tails, // 2\n  StraightPlus = Coin.Heads + Coin.Heads + Coin.Heads, // 3\n}\n\ninterface Trigrams {\n  [key: string]: string\n}\n// TODO: convert to enum.\nconst Trigrams: Trigrams = {\n  [`${Line.Straight}${Line.Straight}${Line.Straight}`]: \"Ch'ien\",\n  // '222': 'Ch\\'ien',\n  // '211': 'Chen',\n  [`${Line.Straight}${Line.Broken}${Line.Broken}`]: \"Chen\",\n  // '121': 'K\\'an',\n  [`${Line.Broken}${Line.Straight}${Line.Broken}`]: \"K'an\",\n  // '112': 'Ken',\n  [`${Line.Broken}${Line.Broken}${Line.Straight}`]: \"Ken\",\n  // '111': 'K\\'un',\n  [`${Line.Broken}${Line.Broken}${Line.Broken}`]: \"K'un\",\n  // '122': 'Sun',\n  [`${Line.Broken}${Line.Straight}${Line.Straight}`]: \"Sun\",\n  // '212': 'Li',\n  [`${Line.Straight}${Line.Broken}${Line.Straight}`]: \"Li\",\n  // '221': 'Tui',\n  [`${Line.Straight}${Line.Straight}${Line.Broken}`]: \"Tui\",\n}\n\ninterface TrigramLookupOrder {\n  [Key: string]: number\n}\nconst TRIGRAM_LOOKUP_ORDER: TrigramLookupOrder = {\n  \"Ch'ien\": 0,\n  Chen: 1,\n  \"K'an\": 2,\n  Ken: 3,\n  \"K'un\": 4,\n  Sun: 5,\n  Li: 6,\n  Tui: 7,\n}\n\nconst HEXAGRAM_LOOKUP_TABLE = [\n  [1, 34, 5, 26, 11, 9, 14, 43],\n  [25, 51, 3, 27, 24, 42, 21, 17],\n  [6, 40, 29, 4, 7, 59, 64, 47],\n  [33, 62, 39, 52, 15, 53, 56, 31],\n  [12, 16, 8, 23, 2, 20, 35, 45],\n  [44, 32, 48, 18, 46, 57, 50, 28],\n  [13, 55, 63, 22, 36, 37, 30, 49],\n  [10, 54, 60, 41, 19, 61, 38, 58],\n]\n\ninterface HexagramNames {\n  [key: number]: string\n}\n// TODO: correct names\nconst HEXAGRAM_NAMES: HexagramNames = {\n  1: \"The Creative\",\n  2: \"The Receptive\",\n  3: \"Difficulty at the Beginning\",\n  4: \"Youthful Folly\",\n  5: \"Waiting (Nourishment)\",\n  6: \"Conflict\",\n  7: \"The Army\",\n  8: \"Holding Together [Union]\",\n  9: \"The Taming Power of the Small\",\n  10: \"Treading [Conduct]\",\n  11: \"Peace\",\n  12: \"Standstill [Stagnation]\",\n  13: \"Fellowship\",\n  14: \"Possession in Great Measure\",\n  15: \"Modesty\",\n  16: \"Enthusiasm\",\n  17: \"Following\",\n  18: \"Work on What Has Been Spoiled\",\n  19: \"Approach\",\n  20: \"Contemplation (View)\",\n  21: \"Biting Through\",\n  22: \"Grace\",\n  23: \"Splitting Apart\",\n  24: \"Return (The Turning Point)\",\n  25: \"Innocence (The Unexpected)\",\n  26: \"The Taming Power of the Great\",\n  27: \"The Corners of the Mouth\",\n  28: \"Preponderance of the Great\",\n  29: \"The Abysmal (Water)\",\n  30: \"The Clinging, Fire\",\n  31: \"Influence (Wooing)\",\n  32: \"Duration\",\n  33: \"Retreat\",\n  34: \"The Power of the Great\",\n  35: \"Progress\",\n  36: \"Darkening of the Light\",\n  37: \"The Family [The Clan]\",\n  38: \"Opposition\",\n  39: \"Obstruction\",\n  40: \"Deliverance\",\n  41: \"Decrease\",\n  42: \"Increase\",\n  43: \"Break-through (Resoluteness)\",\n  44: \"Coming to Meet\",\n  45: \"Gathering Together [Massing]\",\n  46: \"Pushing Upward\",\n  47: \"Oppression (Exhaustion)\",\n  48: \"The Well\",\n  49: \"Revolution (Molting)\",\n  50: \"The Cauldron\",\n  51: \"The Arousing (Shock, Thunder)\",\n  52: \"Keeping Still, Mountain\",\n  53: \"Development (Gradual Progress)\",\n  54: \"The Marrying Maiden\",\n  55: \"Abundance [Fullness]\",\n  56: \"The Wanderer\",\n  57: \"The Gentle (The Penetrating, Wind)\",\n  58: \"The Joyous, Lake\",\n  59: \"Dispersion [Dissolution]\",\n  60: \"Limitation\",\n  61: \"Inner Truth\",\n  62: \"Preponderance of the Small\",\n  63: \"After Completion\",\n  64: \"Before Completion\",\n}\n\nexport class Trigram {\n  lines: [Line, Line, Line]\n  key: string\n  trigramName: string\n  trigramLookup: number\n  changing: boolean\n\n  constructor(lines?: [Line, Line, Line]) {\n    this.lines = lines || [this.getLine(), this.getLine(), this.getLine()]\n    this.key = this.getKey(this.lines)\n    this.trigramName = Trigrams[this.key]\n    this.trigramLookup = TRIGRAM_LOOKUP_ORDER[this.trigramName]\n    this.changing = this.lines.some(\n      (line: Line) => line === Line.BrokenPlus || line === Line.StraightPlus\n    )\n  }\n\n  coinToss = (): Coin => Math.round(Math.random()) as Coin\n\n  getLine = (): Line =>\n    (this.coinToss() + this.coinToss() + this.coinToss()) as Line\n\n  normalizeLine(line: Line): Line {\n    switch (line) {\n      case Line.BrokenPlus:\n        return Line.Broken\n      case Line.StraightPlus:\n        return Line.Straight\n      default:\n        return line\n    }\n  }\n\n  changeLine(line: Line): Line {\n    switch (line) {\n      case Line.BrokenPlus:\n        return Line.Straight\n      case Line.StraightPlus:\n        return Line.Broken\n      default:\n        return line\n    }\n  }\n\n  changeLines(): [Line, Line, Line] {\n    return this.lines.map((line: Line) => this.changeLine(line)) as [\n      Line,\n      Line,\n      Line\n    ]\n  }\n\n  normalizeLines(): [Line, Line, Line] {\n    return this.lines.map((line: Line) => this.normalizeLine(line)) as [\n      Line,\n      Line,\n      Line\n    ]\n  }\n\n  getKey(lines: Line[]) {\n    const normalizedLines = lines.map((line: Line) => this.normalizeLine(line))\n    const key =\n      \"\" + normalizedLines[0] + normalizedLines[1] + normalizedLines[2]\n    return key\n  }\n}\n\nexport class Hexagram {\n  lowerTrigram: Trigram\n  upperTrigram: Trigram\n  hexagramNumber: number\n  hexagramName: string\n  changing: boolean\n\n  constructor(lowerTrigram?: Trigram, upperTrigram?: Trigram) {\n    this.lowerTrigram = lowerTrigram || new Trigram()\n    this.upperTrigram = upperTrigram || new Trigram()\n    this.hexagramNumber =\n      HEXAGRAM_LOOKUP_TABLE[this.lowerTrigram.trigramLookup][\n        this.upperTrigram.trigramLookup\n      ]\n    this.hexagramName = HEXAGRAM_NAMES[this.hexagramNumber]\n    this.changing = this.lowerTrigram.changing || this.upperTrigram.changing\n  }\n\n  private getLinesAscending(): Line[] {\n    return [...this.lowerTrigram.lines, ...this.upperTrigram.lines]\n  }\n\n  getLinesDescending(): Line[] {\n    return this.getLinesAscending().reverse()\n  }\n\n  getChangingHex(): Hexagram | null {\n    if (!this.changing) {\n      return null\n    }\n\n    const newLower = new Trigram(this.lowerTrigram.changeLines())\n    const newUpper = new Trigram(this.upperTrigram.changeLines())\n    return new Hexagram(newLower, newUpper)\n  }\n}\n","import React, { useState, useEffect } from \"react\"\nimport { Accordion, AccordionPanel } from \"grommet\"\nimport DateTimePicker from \"../../components/DateTimePicker\"\nimport Pillar from \"../../components/Pillar\"\nimport BaziPillar from \"../../containers/Bazi/BaziPillar\"\nimport BoxButton from \"../../components/BoxButton\"\nimport { EB } from \"../../cm-lib/constants\"\nimport { dateObjectToBazi } from \"../../cm-lib/FourPillar\"\nimport { useTranslation } from \"react-i18next\"\nimport { parseStringDate, getQueryString, chunk } from \"../../helpers\"\nimport { format } from \"date-fns\"\n\nconst isBrowser = typeof window !== `undefined`\n\nconst Home = ({ inputDate, onBazi, hideOtherInformation, plumNumber }) => {\n  const { t } = useTranslation()\n  const qs = getQueryString()\n  const [dateObject] = useState(inputDate || new Date())\n  const [pillars, setPillars] = useState(null)\n  const [gender, setGender] = useState(parseInt(qs.g) || 0)\n  const [bazi] = useState(\n    dateObjectToBazi(dateObject, gender === 0 ? \"M\" : \"F\")\n  )\n  useEffect(() => {\n    const bz = [\n      {\n        header: \"Hour\",\n        ganzhi: bazi.GanZhiHour.ganzhi,\n        custom: EB.indexOf(bazi.GanZhiHour.ganzhi.substr(1, 1)) + 1,\n      },\n      {\n        header: \"Day\",\n        ganzhi: bazi.GanZhiDay.ganzhi,\n        custom: `Lunar: ${bazi.lunarDay}`,\n      },\n      {\n        header: \"Month\",\n        ganzhi: bazi.GanZhiMonth.ganzhi,\n        custom: `Lunar: ${bazi.lunarMonthNumber}`,\n      },\n      {\n        header: \"Year\",\n        ganzhi: bazi.GanZhiYear.ganzhi,\n        custom: EB.indexOf(bazi.GanZhiYear.ganzhi.substr(1, 1)) + 1,\n      },\n    ].map(e => (\n      <BaziPillar\n        custom={e.custom}\n        plumNumber\n        hiddenStems\n        header={e.header}\n        ganzhi={e.ganzhi}\n      />\n    ))\n\n    const luckHeader = bazi.tenYearCycle.map((e, i) => {\n      return <BaziPillar header={bazi.startWesternAge + i * 10} ganzhi={e} />\n    })\n\n    setPillars({\n      bz,\n      hundredYear: chunk(\n        bazi.hundredYear.map(e => (\n          <BaziPillar header={e.year} ganzhi={e.pillar} />\n        )),\n        10\n      ),\n      luckHeader,\n      bazi,\n    })\n  }, [bazi])\n  return (\n    <>\n      {!hideOtherInformation && (\n        <BoxButton\n          activeIndex={gender}\n          onClick={(e, i) => setGender(i)}\n          buttons={[\n            {\n              label: \"M\",\n            },\n            {\n              label: \"F\",\n            },\n          ]}\n        />\n      )}\n      <br />\n      {pillars && <Pillar list={pillars.bz} plumNumber />}\n\n      {!hideOtherInformation && (\n        <Accordion>\n          <AccordionPanel label=\"More Information\">\n            {Object.keys(bazi.stars.classical).map(k => (\n              <AccordionPanel\n                label={`${k} ${t(k)}: ${bazi.stars.classical[k]}`}\n              ></AccordionPanel>\n            ))}\n          </AccordionPanel>\n        </Accordion>\n      )}\n      <br />\n      {!hideOtherInformation && pillars && <Pillar list={pillars.luckHeader} />}\n\n      <br />\n      {!hideOtherInformation &&\n        pillars &&\n        pillars.hundredYear.map(e => <Pillar list={e} />)}\n    </>\n  )\n}\n\nexport default Home\n","import { dateToBazi } from \"../FourPillar\"\nimport {\n  EB,\n  HS,\n  EARLY_HEAVEN_TRIGRAM,\n  SIX_ANIMALS,\n  EBElement,\n} from \"../constants\"\nimport Hexagram from \"./Hexagram.json\"\n\nconst elementRelationship = (first, second) => {\n  const lookup = [\"water\", \"wood\", \"fire\", \"earth\", \"metal\"]\n  const firstIndex = lookup.findIndex(e => e === first)\n  const distance = lookup\n    .slice(firstIndex)\n    .concat(lookup.slice(0, firstIndex))\n    .findIndex(e => e === second)\n\n  if (distance === 0) {\n    return \"兄\"\n  }\n  if (distance === 1) {\n    return \"子\"\n  }\n  if (distance === 2) {\n    return \"妻\"\n  }\n  if (distance === 3) {\n    return \"官\"\n  }\n  if (distance === 4) {\n    return \"父\"\n  }\n}\n\nexport const dateToHexagram = date => {\n  const bazi = dateToBazi(date)\n  const { lunarMonthNumber, lunarDay } = bazi\n  const [yStem, yBranch] = bazi.GanZhiYear.ganzhi.split(\"\")\n  const [dStem, dBranch] = bazi.GanZhiDay.ganzhi.split(\"\")\n  const [hStem, hBranch] = bazi.GanZhiHour.ganzhi.split(\"\")\n  const yearNum = EB.findIndex(e => e === yBranch) + 1\n  const hourNum = EB.findIndex(e => e === hBranch) + 1\n\n  const sumOfYMD = lunarDay + lunarMonthNumber + yearNum\n\n  const sumOfYMDH = sumOfYMD + hourNum\n  const upperTrigram = (sumOfYMD - 1) % 8\n  const lowerTrigram = (sumOfYMDH - 1) % 8\n  const changingLine = (sumOfYMDH - 1) % 6\n\n  const upper =\n    EARLY_HEAVEN_TRIGRAM[Object.keys(EARLY_HEAVEN_TRIGRAM)[upperTrigram]]\n  const lower =\n    EARLY_HEAVEN_TRIGRAM[Object.keys(EARLY_HEAVEN_TRIGRAM)[lowerTrigram]]\n  const mainHexagram = `${lower}${upper}`\n  const changeHexagram = changeLine(mainHexagram, changingLine)\n  const changeHexagramObject = getHex(changeHexagram)\n  const mainHexagramObject = getHex(mainHexagram)\n\n  const getTrigram = binary =>\n    Object.keys(EARLY_HEAVEN_TRIGRAM).find(\n      e => EARLY_HEAVEN_TRIGRAM[e] === binary\n    )\n  return {\n    mainHexagram: {\n      ...mainHexagramObject,\n      relation: mainHexagramObject.Branch.split(\"\").map(ee =>\n        elementRelationship(mainHexagramObject.element, EBElement[ee])\n      ),\n      upper: getTrigram(upper),\n      lower: getTrigram(lower),\n    },\n    changeHexagram: {\n      ...changeHexagramObject,\n      relation: changeHexagramObject.Branch.split(\"\").map(ee =>\n        elementRelationship(mainHexagramObject.element, EBElement[ee])\n      ),\n      upper: getTrigram(changeHexagram.substr(3, 3)),\n      lower: getTrigram(changeHexagram.substr(0, 3)),\n    },\n    changingLine,\n    animals: getSixAnimal(dStem),\n  }\n}\n\nexport const getHex = binary => {\n  return searchHexagram(\"Binary\", binary.split(\"\").join(\"\"))\n}\n\nexport const getSixAnimal = dayMaster => {\n  const lookup = {\n    甲: 0,\n    乙: 0,\n    丙: 1,\n    丁: 1,\n    戊: 2,\n    己: 3,\n    庚: 4,\n    辛: 4,\n    壬: 5,\n    癸: 5,\n  }\n  const index = lookup[dayMaster]\n  return SIX_ANIMALS.slice(index).concat(SIX_ANIMALS.slice(0, index))\n}\n\nexport const getEB = hexagramBinary => {\n  const lowerTrigram = hexagramBinary.substr(0, 3)\n  const upperTrigram = hexagramBinary.substr(3, 3)\n  const lookup = {\n    \"111\": 0,\n    \"100\": 0,\n    \"001\": 4,\n    \"010\": 2,\n    \"000\": 7,\n    \"101\": 3,\n    \"011\": 1,\n    \"110\": 5,\n  }\n  const lowerStart = lookup[lowerTrigram]\n  const upperStart = lookup[upperTrigram]\n\n  return [...Array(6).keys()].map(i => {\n    if (i < 3) {\n      const isYin = [0, 5, 3, 6].includes(parseInt(lowerTrigram, 2))\n      if (isYin) {\n        const seq = EB.slice().reverse()\n        return seq[(11 - lowerStart + i * 2) % 12]\n      } else {\n        return EB[(lowerStart + i * 2) % 12]\n      }\n    } else {\n      const isYin = [0, 5, 3, 6].includes(parseInt(upperTrigram, 2))\n      if (isYin) {\n        const seq = EB.slice().reverse()\n        return seq[(11 - upperStart + i * 2) % 12]\n      } else {\n        return EB[(upperStart + i * 2) % 12]\n      }\n    }\n  })\n}\n\nconst changeLine = (hexagram, lineIndex) => {\n  const replace = hexagram[lineIndex] === \"1\" ? \"0\" : \"1\"\n  return replaceAt(hexagram, lineIndex, replace)\n}\n\nexport const searchHexagram = (key, value) => {\n  return Hexagram.find(h => h[key] === value)\n}\n\nconst replaceAt = (word, index, replacement) => {\n  return (\n    word.substr(0, index) +\n    replacement +\n    word.substr(index + replacement.length)\n  )\n}\n","import styled from \"styled-components\"\nimport React from \"react\"\n\nexport const BrokenContainer = styled.div`\n  display: flex;\n  height: 20px;\n  width: 100%;\n  justify-content: space-between;\n  margin: 10px auto;\n`\n\nexport const BrokenSegment = styled.div`\n  height: 100%;\n  width: ${props => (props.mend ? \"71%\" : \"32%\")};\n  background-color: ${props => (props.change ? \"tomato\" : \"darkslategrey\")};\n  color: white;\n  text-align: ${props => (props.left ? \"left\" : \"right\")};\n  display: flex;\n`\n\nconst SegmentSymbol = styled.div`\n  ${props => (props.right ? \"margin-left: auto;\" : \"\")}\n`\n\nexport const Broken = ({ change, branch, host, guest, kin, mend, shen }) => (\n  <BrokenContainer mend={mend}>\n    {shen}\n    {!mend && (\n      <BrokenSegment mend={mend} left={true} change={change}>\n        {host && \"S\"}\n        {guest && \"O\"}\n      </BrokenSegment>\n    )}\n    <BrokenSegment mend={mend} margin change={change}>\n      <SegmentSymbol>\n        {mend && host && \"S\"}\n        {mend && guest && \"O\"}\n      </SegmentSymbol>\n      <SegmentSymbol right>{kin}</SegmentSymbol>\n    </BrokenSegment>\n    {branch}\n  </BrokenContainer>\n)\n\nexport const Straight = props => <Broken {...props} mend={true} />\n","import React from \"react\"\nimport { Line } from \"./utils\"\nimport { Straight, StraightPlus, Broken, BrokenPlus } from \"./Hexline.css\"\ninterface Props {\n  line: Line\n}\n\nconst HexLine = props => {\n  switch (props.line) {\n    case Line.Broken:\n      return <Broken {...props} />\n    case Line.BrokenPlus:\n      return <BrokenPlus />\n    case Line.Straight:\n      return <Straight {...props} />\n    case Line.StraightPlus:\n      return <StraightPlus />\n    default:\n      return <p>woops</p>\n  }\n}\n\nexport default HexLine\n","import React from \"react\"\nimport { Box, Text } from \"grommet\"\nimport { Hexagram, Line } from \"./utils\"\nimport HexLine from \"./HexLine\"\nimport { HexagramWrapper, Title } from \"./Hex.css\"\n\ninterface Props {\n  hexagram: Hexagram\n}\n\nconst Hex = ({ hexagram, changeLine, data, sixGod }) => (\n  <>\n    <Box align=\"center\" justify=\"center\">\n      {data.TC}\n    </Box>\n    <Box align=\"center\" justify=\"center\">\n      {hexagram.hexagramName}\n    </Box>\n    {hexagram.getLinesDescending().map((line: Line, i) => {\n      const inverseIndex = 5 - i\n      return (\n        <HexLine\n          kin={data.relation[inverseIndex]}\n          branch={data.Branch[inverseIndex]}\n          shen={sixGod && sixGod[inverseIndex]}\n          host={data.host - 1 === inverseIndex}\n          guest={data.guest - 1 === inverseIndex}\n          line={line}\n          change={i === changeLine}\n        />\n      )\n    })}\n  </>\n)\n\nexport default Hex\n","import React, { useState, useEffect } from \"react\"\nimport Layout from \"../../../containers/layout\"\nimport Bazi from \"../../../components/Bazi\"\nimport { dateToHexagram } from \"../../../cm-lib/IChing\"\nimport DatePicker from \"../../../components/DateTimePicker\"\nimport { Hexagram, Line, Trigram } from \"../../../containers/IChing/utils\"\nimport Hex from \"../../../containers/IChing/Hex\"\nimport { Box, Accordion, AccordionPanel } from \"grommet\"\nimport {\n  DATETIME_FORMAT,\n  DATE_FORMAT,\n  READABLE_DATETIME_FORMAT,\n} from \"../../../constants\"\nimport { assign, getQueryString, parseStringDate } from \"../../../helpers\"\nimport { format } from \"date-fns\"\nimport Ad from \"../../../containers/Ad\"\n\nconst queryString = require(\"query-string\")\n\nconst binToHexagram = lines => {\n  const lowerLines = lines\n    .slice(0, 3)\n    .map(e => (e === \"0\" ? Line.Broken : Line.Straight))\n  const upperLines = lines\n    .slice(3, 6)\n    .map(e => (e === \"0\" ? Line.Broken : Line.Straight))\n  return new Hexagram(new Trigram(lowerLines), new Trigram(upperLines))\n}\n\nconst Home = () => {\n  const qs = getQueryString()\n  const queryDate = parseStringDate(qs.search, new Date())\n  const [hex, setHex] = useState(null)\n  useEffect(() => {\n    const ii = dateToHexagram(queryDate)\n    const mainHex = binToHexagram(ii.mainHexagram.Binary.split(\"\"))\n    const changeHex = binToHexagram(ii.changeHexagram.Binary.split(\"\"))\n    console.log(ii)\n    setHex([\n      {\n        hex: mainHex,\n        changeLine: 5 - ii.changingLine,\n        data: ii.mainHexagram,\n        sixGod: ii.animals,\n      },\n      {\n        hex: changeHex,\n        data: ii.changeHexagram,\n        sixGod: ii.animals,\n      },\n    ])\n  }, [])\n\n  return (\n    <Layout>\n      <h2>Plum Blossom Divination</h2>\n      <Accordion background=\"light-2\">\n        <AccordionPanel label=\"How The Hexagram Is Derived\">\n          <Box>\n            <ol>\n              <li>\n                {\" \"}\n                1 - Qian, 2 - Dui, 3 - Li, 4 - Zhen, 5 - Xun, 6 - Kan, 7 - Gen,\n                8 - Kun\n              </li>\n              <li>\n                Basing on the time the question is asked, get the bazi chart\n              </li>\n              <li>\n                For year and day, get the branch number (1 - 12), for month and\n                day get the lunar month and day\n              </li>\n              <li>\n                <strong>Upper Trigram</strong> = year + month + day divide by 8\n                and get the remainder, if remainder is 0, take it as 8\n              </li>\n              <li>\n                <strong>Lower Trigram</strong> = year + month + day + hour\n                divide by 8 and get the remainder, if remainder is 0, take it as\n                8\n              </li>\n              <li>\n                <strong>Changing Line</strong> = year + month + day + hour\n                divide by 6 and get the remainder, if remainder is 0, take it as\n                6\n              </li>\n            </ol>\n          </Box>\n        </AccordionPanel>\n      </Accordion>\n      <DatePicker\n        dateObject={queryDate}\n        onClick={date =>\n          assign(\n            \"?\" +\n              queryString.stringify({\n                search: format(date, DATETIME_FORMAT),\n              })\n          )\n        }\n      />\n\n      <Bazi inputDate={queryDate} hideOtherInformation={true} plumNumber />\n      <Box direction=\"row\" alignContent=\"stretch\">\n        {hex &&\n          hex.map(e => (\n            <Box fill={true} pad=\"medium\">\n              <Hex\n                data={e.data}\n                hexagram={e.hex}\n                changeLine={e.changeLine}\n                sixGod={e.sixGod}\n              />\n            </Box>\n          ))}\n      </Box>\n      <Ad />\n    </Layout>\n  )\n}\n\nexport default Home\n","import React from \"react\"\nimport { Box, Text } from \"grommet\"\n\nconst Home = ({ onClick, buttons, activeIndex }) => {\n  return (\n    <>\n      <Box direction=\"row-responsive\">\n        {buttons &&\n          buttons.map((e, i) => (\n            <Box\n              key={i}\n              onClick={() => onClick && onClick(e, i)}\n              align=\"center\"\n              color=\"white\"\n              background={activeIndex === i ? \"brand\" : \"black\"}\n              fill=\"horizontal\"\n              pad=\"small\"\n            >\n              <Text color=\"white\"> {e.label}</Text>\n            </Box>\n          ))}\n      </Box>\n    </>\n  )\n}\n\nexport default Home\n","import React from \"react\"\nimport { Box } from \"grommet\"\n\nconst Home = ({ list, wrap }) => {\n  return (\n    <>\n      <Box wrap={wrap} direction=\"row\" gap=\"xxsmall\">\n        {list}\n      </Box>\n    </>\n  )\n}\n\nexport default Home\n","import React from \"react\"\nimport { Box, Text } from \"grommet\"\nimport { getColor } from \"../../cm-lib/QiMen\"\nimport { HIDDEN_STEMS, EB } from \"../../cm-lib/constants\"\nimport { useTranslation } from \"react-i18next\"\n\nconst StandardBox = ({ children }) => (\n  <Box justify=\"center\" align=\"center\" alignContent=\"center\">\n    {children}\n  </Box>\n)\n\nconst PillarGrid = ({ children, t, background }) => (\n  <Box\n    background={background || getColor(t)}\n    pad=\"small\"\n    fill=\"horizontal\"\n    justify=\"center\"\n    align=\"center\"\n    alignContent=\"center\"\n  >\n    {\" \"}\n    {children}{\" \"}\n  </Box>\n)\n\nconst Home = ({ header, ganzhi, custom, plumNumber, hiddenStems }) => {\n  const { t } = useTranslation()\n  return (\n    <>\n      <Box direction=\"column\" fill={\"horizontal\"} gap=\"xxsmall\">\n        <PillarGrid background=\"light-2\">\n          <StandardBox> {header}</StandardBox>\n        </PillarGrid>\n        <PillarGrid t={ganzhi.substr(0, 1)}>\n          <StandardBox> {ganzhi.substr(0, 1)}</StandardBox>\n          <StandardBox>\n            {\" \"}\n            <Text size=\"12px\" textAlign=\"center\">\n              {t(ganzhi.substr(0, 1))}\n            </Text>\n          </StandardBox>\n        </PillarGrid>\n        <PillarGrid t={ganzhi.substr(1, 1)}>\n          <StandardBox> {ganzhi.substr(1, 1)}</StandardBox>\n          <StandardBox>\n            {\" \"}\n            <Text size=\"12px\" textAlign=\"center\">\n              {t(ganzhi.substr(1, 1))}\n            </Text>\n          </StandardBox>\n        </PillarGrid>\n        {hiddenStems && (\n          <PillarGrid t={ganzhi.substr(1, 1)}>\n            <StandardBox> {HIDDEN_STEMS[ganzhi.substr(1, 1)]}</StandardBox>\n          </PillarGrid>\n        )}\n        {custom && (\n          <PillarGrid t={ganzhi.substr(1, 1)}>\n            <StandardBox> {custom}</StandardBox>\n          </PillarGrid>\n        )}\n      </Box>\n    </>\n  )\n}\n\nexport default Home\n"],"sourceRoot":""}