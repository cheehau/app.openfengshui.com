{"version":3,"sources":["webpack:///./src/modules/fengshui/qmdj/day.js","webpack:///./src/helpers/datetime.js","webpack:///./src/components/Square/Styles.js","webpack:///./src/containers/Ad.js","webpack:///./src/components/Square/index.js","webpack:///./src/components/Square/QiMen.js","webpack:///./src/components/QiMen/index.js","webpack:///./src/containers/QiMen.js","webpack:///./src/modules/fengshui/qmdj/common.js","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["Home","qs","getQueryString","useDate","parseDateString","dt","chartMeta","getDayChart","chart","lookupChart","structure","pillar","initialDate","heading","chartType","date2String","date","format","dateString","isNaN","parseISO","getTime","Date","Symbol","styled","div","props","includes","index","width","Ad","client","slot","Square","inline","background","data","Template","direction","onSquarePressed","colorLookup","defaultColorLookup","SE","base","global","colors","S","SW","E","W","NE","N","NW","onClick","QiMen","isYinChart","cardinal","t","useTranslation","size","React","useContext","ResponsiveContext","textColor","Text","weight","color","getColor","heaven","star","god","0","1","2","3","4","5","6","7","8","find","e","void","bazi","GanZhiHour","ganzhi","substr","GanZhiDay","GanZhiMonth","GanZhiYear","replace","earth","door","BoxWrapper","Box","search","alignSelf","justify","wrap","fill","pad","top","bottom","left","right","withDirection","map","i","border","key","isoString","emptiness","onDateChanged","handleSearch","selectedDate","useState","qimenChart","setQimenChart","isYangChart","useEffect","margin","getChart","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","Object","keys","length","indexOf"],"mappings":"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","file":"component---src-modules-fengshui-qmdj-day-js-f0d6636eca02b704f2ce.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../../../containers/layout\"\nimport Common from \"./common\"\nimport {\n  getMonthChartByDate as getDayChart,\n  lookupChart,\n} from \"../../../cm-lib/QiMen\"\nimport { parseDateString } from \"../../../helpers/datetime\"\nimport { getQueryString } from \"../../../helpers\"\n\nconst Home = () => {\n  const qs = getQueryString()\n  const useDate = parseDateString(qs.dt)\n  const chartMeta = getDayChart(useDate)\n  const chart = lookupChart(chartMeta.structure, chartMeta.pillar)\n  return (\n    <Layout>\n      <Common\n        chart={chart}\n        initialDate={useDate}\n        heading=\"Qi Men Dun Jia Day Chart\"\n        chartType=\"Day Chart\"\n      />\n    </Layout>\n  )\n}\n\nexport default Home\n","import { format, parseISO } from \"date-fns\"\nexport const date2String = date => format(date, \"yyyy-MM-dd HH:mm\")\n\nexport const parseDateString = dateString =>\n  isNaN(parseISO(dateString).getTime()) ? new Date() : parseISO(dateString)\n","import styled from \"styled-components\"\n\nexport const Symbol = styled.div`\n    position absolute;\n    ${props => ([0, 3, 6].includes(props.index) ? \"left: 10px;\" : \"\")}\n    ${props => ([0, 3, 6].includes(props.index) ? \"left: 10px;\" : \"\")}\n    ${props => ([2, 5, 8].includes(props.index) ? \"right: 10px;\" : \"\")}\n    ${props => ([6, 7, 8].includes(props.index) ? \"bottom: 10px;\" : \"\")}\n    ${props => ([1, 4, 7].includes(props.index) ? \"left: 50%;\" : \"\")}\n    ${props => ([1, 4, 7].includes(props.index) ? \"margin-left: -10px;\" : \"\")}\n    ${props =>\n      [3].includes(props.index) ? \"top: 50%; margin-top: -20px;\" : \"\"}\n    width: ${props => (props.width ? props.width : \"20px\")};\n    ${props => (props.width ? \"left: 0;\" : \"\")};\n    text-align: center;\n`\n","import React from \"react\"\nimport { Adsense } from \"@ctrl/react-adsense\"\n\nconst Ad = () => <Adsense client=\"ca-pub-6343289823091285\" slot=\"5114483936\" />\n\nexport default Ad\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { base } from \"grommet\"\nconst Square = styled.div`\n  width: 100%;\n  ${props => (props.inline ? \"\" : \"padding-bottom: 100%;\")}\n\n  position: relative;\n  display: flex;\n  ${props => (props.background ? `background-color: ${props.background}` : \"\")}\n`\n\nconst index = ({\n  index,\n  inline,\n  data,\n  Template,\n  direction,\n  onSquarePressed,\n  colorLookup,\n}) => {\n  const defaultColorLookup = {\n    SE: base.global.colors[\"status-ok\"],\n    S: base.global.colors[\"status-error\"],\n    SW: base.global.colors[\"neutral-4\"],\n    E: base.global.colors[\"status-ok\"],\n    \"\": base.global.colors[\"neutral-4\"],\n    W: base.global.colors[\"dark-3\"],\n    NE: base.global.colors[\"neutral-4\"],\n    N: base.global.colors[\"neutral-3\"],\n    NW: base.global.colors[\"dark-3\"],\n  }\n  return (\n    <Square\n      inline={inline}\n      onClick={() => onSquarePressed && onSquarePressed(data)}\n      background={\n        (colorLookup && colorLookup[direction]) || defaultColorLookup[direction]\n      }\n    >\n      <Template direction={direction} {...data} />\n    </Square>\n  )\n}\n\nexport default index\n","import React from \"react\"\nimport { Text, ResponsiveContext } from \"grommet\"\nimport { useTranslation } from \"react-i18next\"\nimport { Symbol } from \"./Styles\"\nimport { format, parseISO } from \"date-fns\"\nimport { getColor } from \"../../cm-lib/QiMen\"\n\nconst QiMen = ({ chartType, index, isYinChart, ...props }) => {\n  const cardinal = [\"SE\", \"S\", \"SW\", \"E\", \"\", \"W\", \"NE\", \"N\", \"NW\"]\n\n  const branchToGrid = {\n    0: [\"辰\", \"巳\"],\n    1: [\"午\"],\n    2: [\"未\", \"申\"],\n    3: [\"卯\"],\n    4: [],\n    5: [\"酉\"],\n    6: [\"丑\", \"寅\"],\n    7: [\"子\"],\n    8: [\"亥\", \"戌\"],\n  }\n\n  const { t } = useTranslation()\n  const size = React.useContext(ResponsiveContext)\n  const textColor =\n    (isYinChart && [0, 3, 6, 7].includes(index)) ||\n    (!isYinChart && [1, 2, 5, 8].includes(index))\n      ? \"black\"\n      : \"black\"\n  return (\n    <>\n      <Symbol index={0}>\n        <Text weight=\"bold\" color={getColor(props.heaven)} size={size}>\n          {props.heaven}\n        </Text>\n        <Text weight=\"bold\" color={textColor} size=\"10px\"></Text>\n      </Symbol>\n      <Symbol index={1}>\n        <Text weight=\"bold\" color={getColor(props.star)} size={size}>\n          {props.star}\n        </Text>\n        <Text weight=\"bold\" color={getColor(props.star)} size=\"10px\">\n          {t(props.star)}\n        </Text>\n      </Symbol>\n      <Symbol index={2}>\n        <Text color={\"black\"} size={size}>\n          {props.god}\n        </Text>\n        <Text color={\"black\"} size=\"10px\">\n          {t(props.god)}\n        </Text>\n      </Symbol>\n\n      <Symbol index={3} width=\"100%\">\n        <Text color={textColor} size=\"10px\">\n          {branchToGrid[index].find(e => props.void.includes(e)) && \"void\"}\n        </Text>\n        {index === 4 && (\n          <>\n            <Text size=\"14px\" color={textColor}>\n              {chartType}\n            </Text>\n            <br />\n            <Text size=\"14px\" color={textColor}>\n              {props.date && format(parseISO(props.date), \"d MMM yyyy HH:mm\")}\n            </Text>\n            <br />\n            {props.bazi && (\n              <Text color=\"black\" size=\"14px\">\n                {props.bazi.GanZhiHour.ganzhi.substr(0, 1)}\n                {props.bazi.GanZhiDay.ganzhi.substr(0, 1)}\n                {props.bazi.GanZhiMonth.ganzhi.substr(0, 1)}\n                {props.bazi.GanZhiYear.ganzhi.substr(0, 1)}\n              </Text>\n            )}\n            <br />\n            {props.bazi && (\n              <Text color=\"black\" size=\"14px\">\n                {props.bazi.GanZhiHour.ganzhi.substr(1, 1)}\n                {props.bazi.GanZhiDay.ganzhi.substr(1, 1)}\n                {props.bazi.GanZhiMonth.ganzhi.substr(1, 1)}\n                {props.bazi.GanZhiYear.ganzhi.substr(1, 1)}\n              </Text>\n            )}\n          </>\n        )}\n      </Symbol>\n      {index === 4 && (\n        <Symbol index={4}>\n          <Text color=\"black\" size={size}>\n            {props.structure.replace(\"F\", \"Yin\").replace(\"M\", \"Yang\")}\n          </Text>\n        </Symbol>\n      )}\n\n      <Symbol index={6}>\n        {index !== 4 && (\n          <Text color={getColor(props.earth)} size={size}>\n            {props.earth}\n          </Text>\n        )}\n        <Text color={textColor} size=\"10px\"></Text>\n      </Symbol>\n      <Symbol index={7}>\n        <Text weight=\"bold\" color={getColor(props.door)} size={size}>\n          {props.door}\n        </Text>\n        <Text weight=\"bold\" color={getColor(props.door)} size=\"10px\">\n          {t(props.door)}\n        </Text>\n      </Symbol>\n      <Symbol index={8}>\n        <Text color={getColor(cardinal[index])} size={size}>\n          {cardinal[index]}\n        </Text>\n      </Symbol>\n    </>\n  )\n}\n\nexport default QiMen\n","import React from \"react\"\nimport { Box } from \"grommet\"\nimport styled from \"styled-components\"\nimport Square from \"../Square\"\nimport QiMen from \"../Square/QiMen\"\nimport { withDirection } from \"../../helpers\"\n\nconst BoxWrapper = styled(Box)`\n  width: 32%;\n`\n\nconst Home = ({ chartType, chart, onClick, onSquarePressed }) => {\n  const isYinChart = chart && chart.chart && chart.structure.search(\"Yin\") > -1\n  const highlight = \"#CCCCCC\"\n  const lighter = \"#F2F2F2\"\n  const colorLookup = {\n    SE: isYinChart ? highlight : lighter,\n    S: !isYinChart ? highlight : lighter,\n    SW: !isYinChart ? highlight : lighter,\n    E: isYinChart ? highlight : lighter,\n    \"\": lighter,\n    W: !isYinChart ? highlight : lighter,\n    NE: isYinChart ? highlight : lighter,\n    N: isYinChart ? highlight : lighter,\n    NW: !isYinChart ? highlight : lighter,\n  }\n\n  return (\n    <>\n      <Box\n        alignSelf=\"center\"\n        justify=\"center\"\n        direction=\"row\"\n        wrap={true}\n        fill=\"horizontal\"\n        pad={{\n          top: \"2%\",\n          bottom: \"2%\",\n          left: \"0%\",\n          right: \"0%\",\n        }}\n        background=\"brand\"\n      >\n        {chart &&\n          chart.chart &&\n          withDirection(chart.chart).map((e, i) => (\n            <BoxWrapper border={true} key={i}>\n              <Square\n                direction={e.direction}\n                onSquarePressed={onSquarePressed}\n                data={{\n                  date: chart.isoString,\n                  bazi: chart.bazi,\n                  chartType: chartType,\n                  void: chart.emptiness,\n                  structure: chart.structure,\n                  ...e,\n                  index: i,\n                  isYinChart,\n                }}\n                colorLookup={colorLookup}\n                Template={QiMen}\n              />\n            </BoxWrapper>\n          ))}\n      </Box>\n    </>\n  )\n}\n\nexport default Home\n","import React, { useState, useEffect } from \"react\"\nimport { Box, Text } from \"grommet\"\nimport QiMenChart from \"../components/QiMen\"\n\nconst Home = ({\n  chartType,\n  onClick,\n  chart,\n  initialDate,\n  onDateChanged,\n  date,\n  handleSearch,\n  onSquarePressed,\n}) => {\n  const [selectedDate] = useState(date || new Date())\n  const [qimenChart, setQimenChart] = useState({})\n  const isYangChart =\n    (chart && chart.chart && chart.structure.search(\"Yang\") > -1) ||\n    (chart && chart.chart && chart.structure.search(\"M\") > -1)\n  useEffect(() => {\n    onDateChanged && onDateChanged(selectedDate, setQimenChart)\n  }, [selectedDate])\n\n  return (\n    <>\n      <Box direction=\"row\">\n        <Box alignSelf=\"start\">\n          {\" \"}\n          <Text background=\"brand\"> openfengshui.com</Text>{\" \"}\n        </Box>\n        <Box margin={{ left: \"auto\" }}>\n          {\" \"}\n          <Text background=\"brand\">\n            {isYangChart ? \"External\" : \"Internal\"}\n          </Text>{\" \"}\n        </Box>\n      </Box>\n      <QiMenChart\n        chartType={chartType}\n        chart={chart || qimenChart}\n        onSquarePressed={onSquarePressed}\n      />\n      <Box>\n        {\" \"}\n        <Text background=\"brand\">\n          {isYangChart ? \"Internal\" : \"External\"}\n        </Text>{\" \"}\n      </Box>\n    </>\n  )\n}\n\nexport default Home\n","import React from \"react\"\nimport Container from \"../../../containers/QiMen\"\nimport Ad from \"../../../containers/Ad\"\n\nconst Home = ({\n  chartType,\n  chart,\n  onClick,\n  initialDate,\n  heading,\n  handleSearch,\n  onDateChanged,\n  getChart,\n  onSquarePressed,\n}) => {\n  return (\n    <>\n      <Container\n        chartType={chartType}\n        chart={chart}\n        onClick={onClick}\n        initialDate={initialDate}\n        onSquarePressed={onSquarePressed}\n        handleSearch={handleSearch}\n        onDateChanged={onDateChanged}\n      />\n      <Ad />\n    </>\n  )\n}\n\nexport default Home\n","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}