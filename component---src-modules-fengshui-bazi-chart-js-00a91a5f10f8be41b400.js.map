{"version":3,"sources":["webpack:///./src/containers/Bazi/index.js","webpack:///./src/modules/fengshui/bazi/chart.js","webpack:///./src/components/BoxButton/index.js","webpack:///./src/components/Pillar/index.js","webpack:///./src/containers/Bazi/BaziPillar.js"],"names":["isBrowser","window","Home","inputDate","onBazi","hideOtherInformation","t","useTranslation","qs","getQueryString","dateObject","useState","parseStringDate","dt","Date","pillars","setPillars","parseInt","g","gender","setGender","bazi","dateObjectToBazi","useEffect","bz","header","ganzhi","GanZhiHour","GanZhiDay","GanZhiMonth","GanZhiYear","map","e","BaziPillar","hiddenStems","luckHeader","tenYearCycle","i","startWesternAge","hundredYear","chunk","year","pillar","BoxButton","activeIndex","onClick","buttons","label","DateTimePicker","date","format","location","assign","Pillar","list","Accordion","AccordionPanel","Object","keys","stars","classical","k","direction","key","align","color","background","fill","pad","wrap","gap","StandardBox","children","justify","alignContent","PillarGrid","getColor","custom","plumNumber","substr","size","textAlign","HIDDEN_STEMS"],"mappings":"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","file":"component---src-modules-fengshui-bazi-chart-js-00a91a5f10f8be41b400.js","sourcesContent":["import React, { useState, useEffect } from \"react\"\nimport { Accordion, AccordionPanel } from \"grommet\"\nimport DateTimePicker from \"../../components/DateTimePicker\"\nimport Pillar from \"../../components/Pillar\"\nimport BaziPillar from \"./BaziPillar\"\nimport BoxButton from \"../../components/BoxButton\"\n\nimport { dateObjectToBazi } from \"../../cm-lib/FourPillar\"\nimport { useTranslation } from \"react-i18next\"\nimport { parseStringDate, getQueryString, chunk } from \"../../helpers\"\nimport { format } from \"date-fns\"\n\nconst isBrowser = typeof window !== `undefined`\n\nconst Home = ({ inputDate, onBazi, hideOtherInformation }) => {\n  const { t } = useTranslation()\n  const qs = getQueryString()\n  const [dateObject] = useState(parseStringDate(qs.dt, new Date()))\n  const [pillars, setPillars] = useState(null)\n  const [gender, setGender] = useState(parseInt(qs.g) || 0)\n  const [bazi] = useState(\n    dateObjectToBazi(dateObject, gender === 0 ? \"M\" : \"F\")\n  )\n  useEffect(() => {\n    const bz = [\n      {\n        header: \"Hour\",\n        ganzhi: bazi.GanZhiHour.ganzhi,\n      },\n      {\n        header: \"Day\",\n        ganzhi: bazi.GanZhiDay.ganzhi,\n      },\n      {\n        header: \"Month\",\n        ganzhi: bazi.GanZhiMonth.ganzhi,\n      },\n      {\n        header: \"Year\",\n        ganzhi: bazi.GanZhiYear.ganzhi,\n      },\n    ].map(e => <BaziPillar hiddenStems header={e.header} ganzhi={e.ganzhi} />)\n\n    const luckHeader = bazi.tenYearCycle.map((e, i) => {\n      return <BaziPillar header={bazi.startWesternAge + i * 10} ganzhi={e} />\n    })\n\n    setPillars({\n      bz,\n      hundredYear: chunk(\n        bazi.hundredYear.map(e => (\n          <BaziPillar header={e.year} ganzhi={e.pillar} />\n        )),\n        10\n      ),\n      luckHeader,\n      bazi,\n    })\n  }, [bazi])\n  return (\n    <>\n      <BoxButton\n        activeIndex={gender}\n        onClick={(e, i) => setGender(i)}\n        buttons={[\n          {\n            label: \"M\",\n          },\n          {\n            label: \"F\",\n          },\n        ]}\n      />\n      <br />\n      <DateTimePicker\n        dateObject={dateObject}\n        onClick={date => {\n          const dt = format(date, \"yyyy-MM-dd HH:mm\")\n          isBrowser && window.location.assign(`?dt=${dt}&g=${gender}`)\n        }}\n      />\n      <br />\n\n      {pillars && <Pillar list={pillars.bz} />}\n\n      {!hideOtherInformation && (\n        <Accordion>\n          <AccordionPanel label=\"More Information\">\n            {Object.keys(bazi.stars.classical).map(k => (\n              <AccordionPanel\n                label={`${k} ${t(k)}: ${bazi.stars.classical[k]}`}\n              ></AccordionPanel>\n            ))}\n          </AccordionPanel>\n        </Accordion>\n      )}\n      <br />\n      {!hideOtherInformation && pillars && <Pillar list={pillars.luckHeader} />}\n\n      <br />\n      {!hideOtherInformation &&\n        pillars &&\n        pillars.hundredYear.map(e => <Pillar list={e} />)}\n    </>\n  )\n}\n\nexport default Home\n","import React from \"react\"\nimport Layout from \"../../../containers/layout\"\nimport Calendar from \"../../../containers/Bazi\"\n\nconst Home = () => {\n  return (\n    <Layout>\n      <Calendar />\n    </Layout>\n  )\n}\n\nexport default Home\n","import React from \"react\"\nimport { Box, Text } from \"grommet\"\n\nconst Home = ({ onClick, buttons, activeIndex }) => {\n  return (\n    <>\n      <Box direction=\"row-responsive\">\n        {buttons &&\n          buttons.map((e, i) => (\n            <Box\n              key={i}\n              onClick={() => onClick && onClick(e, i)}\n              align=\"center\"\n              color=\"white\"\n              background={activeIndex === i ? \"brand\" : \"black\"}\n              fill=\"horizontal\"\n              pad=\"small\"\n            >\n              <Text color=\"white\"> {e.label}</Text>\n            </Box>\n          ))}\n      </Box>\n    </>\n  )\n}\n\nexport default Home\n","import React from \"react\"\nimport { Box } from \"grommet\"\n\nconst Home = ({ list, wrap }) => {\n  return (\n    <>\n      <Box wrap={wrap} direction=\"row\" gap=\"xxsmall\">\n        {list}\n      </Box>\n    </>\n  )\n}\n\nexport default Home\n","import React from \"react\"\nimport { Box, Text } from \"grommet\"\nimport { getColor } from \"../../cm-lib/QiMen\"\nimport { HIDDEN_STEMS, EB } from \"../../cm-lib/constants\"\nimport { useTranslation } from \"react-i18next\"\n\nconst StandardBox = ({ children }) => (\n  <Box justify=\"center\" align=\"center\" alignContent=\"center\">\n    {children}\n  </Box>\n)\n\nconst PillarGrid = ({ children, t, background }) => (\n  <Box\n    background={background || getColor(t)}\n    pad=\"small\"\n    fill=\"horizontal\"\n    justify=\"center\"\n    align=\"center\"\n    alignContent=\"center\"\n  >\n    {\" \"}\n    {children}{\" \"}\n  </Box>\n)\n\nconst Home = ({ header, ganzhi, custom, plumNumber, hiddenStems }) => {\n  const { t } = useTranslation()\n  return (\n    <>\n      <Box direction=\"column\" fill={\"horizontal\"} gap=\"xxsmall\">\n        <PillarGrid background=\"light-2\">\n          <StandardBox> {header}</StandardBox>\n        </PillarGrid>\n        <PillarGrid t={ganzhi.substr(0, 1)}>\n          <StandardBox> {ganzhi.substr(0, 1)}</StandardBox>\n          <StandardBox>\n            {\" \"}\n            <Text size=\"12px\" textAlign=\"center\">\n              {t(ganzhi.substr(0, 1))}\n            </Text>\n          </StandardBox>\n        </PillarGrid>\n        <PillarGrid t={ganzhi.substr(1, 1)}>\n          <StandardBox> {ganzhi.substr(1, 1)}</StandardBox>\n          <StandardBox>\n            {\" \"}\n            <Text size=\"12px\" textAlign=\"center\">\n              {t(ganzhi.substr(1, 1))}\n            </Text>\n          </StandardBox>\n        </PillarGrid>\n        {hiddenStems && (\n          <PillarGrid t={ganzhi.substr(1, 1)}>\n            <StandardBox> {HIDDEN_STEMS[ganzhi.substr(1, 1)]}</StandardBox>\n          </PillarGrid>\n        )}\n        {custom && (\n          <PillarGrid t={ganzhi.substr(1, 1)}>\n            <StandardBox> {custom}</StandardBox>\n          </PillarGrid>\n        )}\n      </Box>\n    </>\n  )\n}\n\nexport default Home\n"],"sourceRoot":""}